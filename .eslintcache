[{"D:\\react\\scorer\\src\\index.js":"1","D:\\react\\scorer\\src\\App.js":"2","D:\\react\\scorer\\src\\reportWebVitals.js":"3","D:\\react\\scorer\\src\\pages\\Home.js":"4","D:\\react\\scorer\\src\\utils\\ErrorBoundary.js":"5","D:\\react\\scorer\\src\\pages\\TeamList.js":"6","D:\\react\\scorer\\src\\pages\\PlayerList.js":"7","D:\\react\\scorer\\src\\pages\\Player.js":"8","D:\\react\\scorer\\src\\pages\\MatchList.js":"9","D:\\react\\scorer\\src\\pages\\Team.js":"10","D:\\react\\scorer\\src\\pages\\AddPlayer.js":"11","D:\\react\\scorer\\src\\pages\\AddTeam.js":"12","D:\\react\\scorer\\src\\pages\\Match.js":"13","D:\\react\\scorer\\src\\pages\\AddMatch.js":"14","D:\\react\\scorer\\src\\Components\\Header\\index.js":"15","D:\\react\\scorer\\src\\Components\\Common\\Loader\\index.js":"16","D:\\react\\scorer\\src\\utils\\storgeService.js":"17","D:\\react\\scorer\\src\\Components\\SingleSelect\\SingleSelect.js":"18","D:\\react\\scorer\\src\\Components\\SingleSelect\\data.js":"19","D:\\react\\scorer\\src\\Components\\Footer\\index.js":"20","D:\\react\\scorer\\src\\Components\\BallEle\\index.js":"21","D:\\react\\scorer\\src\\Components\\Modal\\index.js":"22","D:\\react\\scorer\\src\\reducers\\reducers.js":"23","D:\\react\\scorer\\src\\actions\\actions.js":"24","D:\\react\\scorer\\src\\reducers\\playerreducer.js":"25","D:\\react\\scorer\\src\\reducers\\matchreducer.js":"26","D:\\react\\scorer\\src\\reducers\\teamreducer.js":"27","D:\\react\\scorer\\src\\pages\\login.js":"28","D:\\react\\scorer\\src\\context\\auth-context.js":"29"},{"size":768,"mtime":1627195413454,"results":"30","hashOfConfig":"31"},{"size":1975,"mtime":1627490496696,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1625570934243,"results":"33","hashOfConfig":"31"},{"size":606,"mtime":1627452596509,"results":"34","hashOfConfig":"31"},{"size":894,"mtime":1625570934247,"results":"35","hashOfConfig":"31"},{"size":3709,"mtime":1627392131974,"results":"36","hashOfConfig":"31"},{"size":4721,"mtime":1627623305400,"results":"37","hashOfConfig":"31"},{"size":5319,"mtime":1627391964792,"results":"38","hashOfConfig":"31"},{"size":3697,"mtime":1627388503154,"results":"39","hashOfConfig":"31"},{"size":8673,"mtime":1627466217890,"results":"40","hashOfConfig":"31"},{"size":6318,"mtime":1627622102604,"results":"41","hashOfConfig":"31"},{"size":4130,"mtime":1627576009659,"results":"42","hashOfConfig":"31"},{"size":20320,"mtime":1627388315000,"results":"43","hashOfConfig":"31"},{"size":9340,"mtime":1627575888224,"results":"44","hashOfConfig":"31"},{"size":650,"mtime":1627358261325,"results":"45","hashOfConfig":"31"},{"size":268,"mtime":1627357564743,"results":"46","hashOfConfig":"31"},{"size":1771,"mtime":1625652363334,"results":"47","hashOfConfig":"31"},{"size":1033,"mtime":1625570934212,"results":"48","hashOfConfig":"31"},{"size":4551,"mtime":1625570934214,"results":"49","hashOfConfig":"31"},{"size":1503,"mtime":1627357631621,"results":"50","hashOfConfig":"31"},{"size":820,"mtime":1626925191076,"results":"51","hashOfConfig":"31"},{"size":2132,"mtime":1627358307028,"results":"52","hashOfConfig":"31"},{"size":291,"mtime":1626925317355,"results":"53","hashOfConfig":"31"},{"size":231,"mtime":1626925188761,"results":"54","hashOfConfig":"31"},{"size":244,"mtime":1627469427897,"results":"55","hashOfConfig":"31"},{"size":315,"mtime":1627138193366,"results":"56","hashOfConfig":"31"},{"size":236,"mtime":1626925323861,"results":"57","hashOfConfig":"31"},{"size":3249,"mtime":1627575470270,"results":"58","hashOfConfig":"31"},{"size":182,"mtime":1627450940306,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"uw1s6m",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\react\\scorer\\src\\index.js",[],["124","125"],"D:\\react\\scorer\\src\\App.js",[],"D:\\react\\scorer\\src\\reportWebVitals.js",[],"D:\\react\\scorer\\src\\pages\\Home.js",[],"D:\\react\\scorer\\src\\utils\\ErrorBoundary.js",[],"D:\\react\\scorer\\src\\pages\\TeamList.js",[],"D:\\react\\scorer\\src\\pages\\PlayerList.js",["126"],"D:\\react\\scorer\\src\\pages\\Player.js",["127"],"import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../Components/Footer\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n//import { getPlayerById } from \"../utils/storgeService\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nfunction Player({ player }) {\r\n  const match = useRouteMatch();\r\n  const {\r\n    params: { playerId },\r\n  } = match;\r\n\r\n    const [playerData, setPlayerData] = useState({});\r\n  \r\n  // useEffect(() => {\r\n  //   let player = getPlayerById(+playerId);\r\n  //   player && setPlayerData({ ...player });\r\n  // }, []);\r\n //const playerId = playerId;\r\n useEffect(() => { \r\n axios({\r\n    url: \"http://localhost:8000/graphql\",\r\n    method: \"post\",\r\n    data: {\r\n      query: `query GetPlayerById($playerId:ID!){\r\n            getPlayerById(playerId:$playerId){\r\n              _id\r\n              name\r\n              run\r\n              wickets\r\n              battingStyle\r\n              bowlingStyle\r\n            }\r\n          }`,\r\n      variables: {\r\n        playerId: playerId,\r\n      },\r\n    },\r\n  })\r\n    .then((res) => {\r\n      //console.log(res.data.data.getPlayerById);\r\n      return setPlayerData(res.data.data.getPlayerById); \r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"player-page full-height\">\r\n        <div className=\"d-flex team-page-header justify-content-between align-items-center mt-3 border-bottom pb-2\">\r\n          <img alt=\"\"\r\n            src={\r\n              //playerData.image ||\r\n              \"https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png\"\r\n            }\r\n            className=\"rounded-circle playerpic mr-3\"\r\n          />\r\n          <div className=\"h5\" style={{ textAlign: \"right\" }}>\r\n            <div>{playerData.name}</div>\r\n            <div className=\"smaller text-muted\">{playerData.batting_style}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Info</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between small mb-1\">\r\n              <div>Matches</div>\r\n              <div>0{/*playerData[0].stats.matches*/}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Batting</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Runs</div>\r\n              <div className=\"h3 text-info\">{playerData.run}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Avg</div>\r\n              <div>{/*playerData[0].stats.avg*/}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>SRate</div>\r\n              <div>{/*playerData[0].stats.srate*/} 0%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Bowling</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Wkts</div>\r\n              <div className=\"h3 text-warning\">{playerData.wickets}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Bowl Avg</div>\r\n              <div>{/*playerData[0].stats.runs*/}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between  align-items-center small mb-1\">\r\n              <div>Bowl SRate</div>\r\n              <div>{/*playerData[0].stats.avg*/}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Overs</div>\r\n              <div>{/*playerData[0].stats.srate*/} 0%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Fielding</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Catches</div>\r\n              <div className=\"h3 text-danger\">{/*playerData[0].stats.matches*/}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Run Outs</div>\r\n              <div>{/*playerData[0].stats.runs*/}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between  align-items-center small mb-1\">\r\n              <div>Stumpings</div>\r\n              <div>{/*playerData[0].stats.avg*/}0</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","D:\\react\\scorer\\src\\pages\\MatchList.js",[],"D:\\react\\scorer\\src\\pages\\Team.js",["128"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Footer from \"../Components/Footer\";\r\nimport SingleSelect from \"../Components/SingleSelect/SingleSelect\";\r\n//import { getTeamById, getData, updateTeamById, getPlayerById } from '../utils/storgeService';\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nfunction Team({ team }) {\r\n  const match = useRouteMatch();\r\n  const {\r\n    params: { teamId },\r\n  } = match;\r\n  const history = useHistory();\r\n\r\n  const [teamData, setTeamData] = useState({});\r\n  const [players, setPlayers] = useState([]);\r\n  const [selectedPlayer, setSelectedPlayer] = useState({});\r\n  // const [updateData, setUpdateData] = useState(0)\r\n  console.log(teamId);\r\n  const [player,setPlayer] = useState({});\r\n  let playerss=[];\r\n  // useEffect(() => {\r\n  //   let team = getTeamById(+teamId);\r\n  //   team && setTeamData({ ...team });\r\n\r\n  //   let players = getData('players');\r\n  //   players?.length > 0 && setPlayers([...players]);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   updateTeamById(teamData.id, teamData);\r\n  // }, [teamData.players]);\r\n\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"http://localhost:8000/graphql\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `query {\r\n              players{\r\n              _id\r\n              name\r\n              run\r\n              wickets\r\n              battingStyle\r\n              bowlingStyle\r\n            }\r\n          }`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.data.players);\r\n        return setPlayers(res.data.data.players);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handlePlayer = (player) => {\r\n    console.log(player);\r\n    setSelectedPlayer({ ...player });\r\n    console.log(selectedPlayer);\r\n  };\r\n\r\n  const addPlayerToTeam = () => {\r\n    console.log(selectedPlayer);\r\n    \r\n    const playerId = selectedPlayer.id;\r\n    axios({\r\n      url: \"http://localhost:8000/graphql\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `query GetPlayerById($playerId:ID!){\r\n                getPlayerById(playerId:$playerId){\r\n                _id\r\n                name\r\n                run\r\n                wickets\r\n                battingStyle\r\n                bowlingStyle\r\n              }\r\n            }`,\r\n        variables: {\r\n          playerId: playerId,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.data.getPlayerById);\r\n        return setPlayer(res.data.data.getPlayerById);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\nconsole.log(player);\r\n      axios({\r\n        url: \"http://localhost:8000/graphql\",\r\n        method: \"post\",\r\n        data: {\r\n          query: `query GetTeamById($teamId:ID!){\r\n                  getTeamById(teamId:$teamId){\r\n                  _id\r\n                  name\r\n                  score\r\n                  won\r\n                  loss\r\n                  tie                 \r\n                }\r\n              }`,\r\n              variables:{\r\n                teamId:teamId\r\n              }\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data.getTeamById);\r\n        return setTeamData({teamData:res.data.data.getTeamById,playerss:[...teamData.playerss,player]}); \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n        console.log(teamData.playerss);\r\n    // setTeamData({ ...teamData,\r\n    //   playerss:[]});\r\n  };\r\n\r\n  const playerOptions = players.map((p) => {\r\n    return { label: p.name, id: p._id };\r\n  });\r\n  console.log(teamData);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"team-page full-height\">\r\n        <div className=\"d-flex team-page-header justify-content-between align-items-center mt-3 border-bottom pb-2\">\r\n          <img\r\n            alt=\"\"\r\n            src={\r\n              //teamData.image ||\r\n              \"https://img2.pngio.com/clipart-cricket-batsman-logo-cricket-logo-png-900_520.jpg\"\r\n            }\r\n            className=\"rounded-circle teampic mr-3\"\r\n          />\r\n          <div className=\"h5 text-secondary\">{teamData.name}</div>\r\n        </div>\r\n        <div className=\"ml-2\">\r\n          <div className=\"d-flex small text-muted justify-content-center pt-2 team-stats align-items-center text-secondary border-bottom pb-2\">\r\n            <div className=\"mr-3\">\r\n              Matches: <span className=\"font-weight-bold\">{3}</span>\r\n            </div>\r\n            <div className=\"mr-3\">\r\n              Won: <span className=\"font-weight-bold text-success\">{1}</span>\r\n            </div>\r\n            <div className=\"mr-3\">\r\n              Loss: <span className=\"font-weight-bold text-danger\">{1}</span>\r\n            </div>\r\n            <div>\r\n              Tied: <span className=\"font-weight-bold text-info\">{1}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"player-list full-height mt-2 pl-0 pr-0\">\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div className=\"mr-2 flex-1\">Players</div>\r\n            <div className=\"flex-2 mr-2\">\r\n              <SingleSelect\r\n                name={\"players\"}\r\n                placeholder=\"\"\r\n                options={playerOptions}\r\n                value={selectedPlayer}\r\n                isSearchable={true}\r\n                onChange={(value) => {\r\n                  handlePlayer(value, \"team_2\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-primary\"\r\n                disabled={!selectedPlayer.id}\r\n                onClick={() => addPlayerToTeam()}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            {teamData.playerss &&\r\n              teamData.playerss.map((player, playerIndex) => {\r\n                return (\r\n                  <div\r\n                    className=\"border player-list-item p-2 shadow-sm mb-2\"\r\n                    key={`team-${playerIndex}`}\r\n                    onClick={() => {\r\n                      redirectTo(`/player/info/${player.id}`);\r\n                    }}\r\n                  >\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <img\r\n                        alt=\"\"\r\n                        src={\r\n                          //player.image ||\r\n                          \"https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png\"\r\n                        }\r\n                        className=\"rounded-circle playerpic mr-2\"\r\n                      />\r\n                      <div className=\"ml-2 w-100\">\r\n                        <div>{player.name}</div>\r\n                        <div className=\"text-muted small\">\r\n                          {player.battingStyle}\r\n                        </div>\r\n                        <div className=\"h-50 d-flex player-stats align-items-center text-secondary\">\r\n                          <div className=\"mr-3\">\r\n                            Matches:{\" \"}\r\n                            <span className=\"font-weight-bold\">\r\n                              {/*player.matches*/}0\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"mr-3\">\r\n                            Runs:{\" \"}\r\n                            <span className=\"font-weight-bold\">\r\n                              {player.run}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"mr-3\">\r\n                            Avg:{\" \"}\r\n                            <span className=\"font-weight-bold\">\r\n                              0{/*player.avg*/}\r\n                            </span>\r\n                          </div>\r\n                          <div>\r\n                            SRate:{\" \"}\r\n                            <span className=\"font-weight-bold\">\r\n                              0{/*player.srate*/}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    team: state.team,\r\n    player: state.player,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Team);\r\n","D:\\react\\scorer\\src\\pages\\AddPlayer.js",["129"],"D:\\react\\scorer\\src\\pages\\AddTeam.js",[],"D:\\react\\scorer\\src\\pages\\Match.js",["130","131","132","133","134","135","136"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Footer from \"../Components/Footer\";\r\nimport undo from \"../assets/undo.svg\";\r\nimport {\r\n  //getMatchById,\r\n  getTeamById,\r\n  //getPlayerById,\r\n  deepCopy,\r\n  //updateMatchById,\r\n} from \"../utils/storgeService\";\r\nimport Modal from \"../Components/Modal\";\r\nimport BallEle from \"../Components/BallEle\";\r\nimport SingleSelect from \"../Components/SingleSelect/SingleSelect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst dismissalOptions = [\r\n  {\r\n    label: \"Caught\",\r\n    value: \"caught\",\r\n  },\r\n  {\r\n    label: \"Bowled\",\r\n    value: \"bowled\",\r\n  },\r\n];\r\nfunction Match({ matchData, player, team }) {\r\n  const match = useRouteMatch();\r\n  const {\r\n    params: { matchId },\r\n  } = match;\r\n  const history = useHistory();\r\n  const [matchdata, setMatchData] = useState({\r\n    data: {},\r\n    update: 0,\r\n  });\r\n  const [modalStatus, setModalStatus] = useState({\r\n    status: false,\r\n    type: \"\",\r\n  });\r\n  const [currentPlayers, setCurrentPlayers] = useState({\r\n    striker: null,\r\n    non_striker: null,\r\n    bowler_1: null,\r\n    dismissal_type: \"\",\r\n    dismissal_caused_by: \"\",\r\n    new_batsmen: null,\r\n  });\r\n    setMatchData({matchData})\r\n  // useEffect(() => {\r\n  //   let match = getMatchById(+matchId);\r\n  //   match && setMatchData({ ...matchData, data: { ...match } });\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   matchData.update > 0 && updateMatchById(matchData.matchData.id, matchData.matchData);\r\n  // }, [matchData.update]);\r\n  \r\n  if (!matchdata?.matchData?.teams) return \"\";\r\n\r\n  const getPlayerFromMatch = (id, teamId) => {\r\n    let currTeam = matchdata.matchData[`team_${teamId}`];\r\n    let currPlayer = currTeam.players.find((p) => p.id === id);\r\n    return currPlayer;\r\n  };\r\n\r\n  const getPlayerListFromMatch = (teamId) => {\r\n    let currTeam = matchdata.matchData[`team_${teamId}`];\r\n    let currPlayerList = currTeam.players.map((p) => {\r\n      return {\r\n        label: p.name,\r\n        value: p.id,\r\n      };\r\n    });\r\n    return currPlayerList;\r\n  };\r\n\r\n  const firstInnings = !matchdata.matchData?.scorecard?.innings_1?.end\r\n    ? true\r\n    : false;\r\n  const currentInning = firstInnings ? \"innings_1\" : \"innings_2\";\r\n\r\n  const currentBattingTeam = firstInnings\r\n    ? matchdata.matchData?.batting_first\r\n    : matchdata.matchData?.teams.find((t) => t !== matchdata.matchData.batting_first);\r\n\r\n  const currentBowlingTeam = firstInnings\r\n    ? matchdata.matchData?.teams.find((t) => t !== matchdata.matchData.batting_first)\r\n    : matchdata.matchData?.batting_first;\r\n\r\n  const striker =\r\n    currentBattingTeam &&\r\n    getPlayerFromMatch(\r\n      matchdata.matchData?.scorecard?.[currentInning]?.striker,\r\n      currentBattingTeam\r\n    );\r\n  const non_striker =\r\n    currentBattingTeam &&\r\n    getPlayerFromMatch(\r\n      matchdata.matchData?.scorecard?.[currentInning]?.non_striker,\r\n      currentBattingTeam\r\n    );\r\n  const bowler_1 =\r\n    currentBowlingTeam &&\r\n    getPlayerFromMatch(\r\n      matchdata.matchData?.scorecard?.[currentInning]?.bowler_1,\r\n      currentBowlingTeam\r\n    );\r\n  const bowler_2 =\r\n    currentBowlingTeam &&\r\n    getPlayerFromMatch(\r\n      matchdata.matchData?.scorecard?.[currentInning]?.bowler_2,\r\n      currentBowlingTeam\r\n    );\r\n\r\n  const current_over = matchdata.matchData?.scorecard?.[currentInning]?.current_over;\r\n  const balls = matchdata.matchData?.scorecard?.[currentInning]?.balls[current_over];\r\n\r\n  const batsmanOptions = getPlayerListFromMatch(currentBattingTeam);\r\n  const bowlerOptions = getPlayerListFromMatch(currentBowlingTeam);\r\n\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n\r\n  const handlePlayer = (value, key) => {\r\n    setCurrentPlayers({ ...currentPlayers, [key]: value });\r\n  };\r\n\r\n  const addRunEvent = (run) => {\r\n    // check if there is a striker\r\n  };\r\n\r\n  const handleEvent = ({ ball, striker }) => {\r\n    // check if there is a striker\r\n\r\n    if (striker) {\r\n      if (ball === \"W\") {\r\n        setModalStatus({ status: true, ball, type: \"wicket\" });\r\n      } else {\r\n        setModalStatus({ status: true, ball, type: \"run\" });\r\n      }\r\n    } else {\r\n      //set striker and non striker\r\n      setModalStatus({ status: true, ball, type: \"init\" });\r\n    }\r\n  };\r\n\r\n  // const ballDescriptor = (type, value ) =>{\r\n  //   if()\r\n  // }\r\n\r\n  const submitEvent = (type, ball, value) => {\r\n    if (type === \"init\") {\r\n      const { scorecard } = deepCopy(matchData.matchData);\r\n\r\n      if (\r\n        !currentPlayers.striker?.value ||\r\n        !currentPlayers.non_striker?.value ||\r\n        !currentPlayers.bowler_1?.value\r\n      )\r\n        return false;\r\n\r\n      scorecard[currentInning][\"striker\"] = currentPlayers.striker.value;\r\n      scorecard[currentInning][\"non_striker\"] =\r\n        currentPlayers.non_striker.value;\r\n      scorecard[currentInning][\"bowler_1\"] = currentPlayers.bowler_1.value;\r\n\r\n      matchdata = {\r\n        ...matchdata,\r\n        data: {\r\n          ...matchdata.matchData,\r\n          scorecard,\r\n        },\r\n        update: matchdata.update + 1,\r\n      };\r\n\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n\r\n    if (type === \"wicket\") {\r\n      const { scorecard } = deepCopy(matchData.matchData);\r\n\r\n      if (\r\n        !currentPlayers.dismissal_type?.value ||\r\n        !currentPlayers.dismissal_caused_by?.value ||\r\n        !currentPlayers.new_batsmen?.value\r\n      )\r\n        return false;\r\n\r\n      scorecard[currentInning][\"dismissal_type\"] =\r\n        currentPlayers.dismissal_type.value;\r\n      scorecard[currentInning][\"dismissal_caused_by\"] =\r\n        currentPlayers.dismissal_caused_by.value;\r\n      scorecard[currentInning][\"new_batsmen\"] =\r\n        currentPlayers.new_batsmen.value;\r\n\r\n      matchdata = {\r\n        ...matchdata,\r\n        data: {\r\n          ...matchdata.matchData,\r\n          scorecard,\r\n        },\r\n        update: matchdata.update + 1,\r\n      };\r\n\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n\r\n    if (type === \"run\") {\r\n      const { scorecard } = deepCopy(matchData.matchData);\r\n      const current_over = scorecard[currentInning][\"current_over\"];\r\n      const current_ball = scorecard[currentInning][\"current_ball\"];\r\n      const ballnum = `${current_over}`;\r\n      let balls = scorecard[currentInning][\"balls\"];\r\n\r\n      let ballObj = {\r\n        type: ball,\r\n        value,\r\n      };\r\n\r\n      balls = {\r\n        [ballnum]: [...(balls[ballnum] ? balls[ballnum] : []), ballObj],\r\n      };\r\n\r\n      scorecard[currentInning][\"balls\"] = balls;\r\n\r\n      if (current_ball === 6) {\r\n        scorecard[currentInning][\"current_ball\"] = 0;\r\n        scorecard[currentInning][\"current_over\"] = current_over + 1;\r\n      } else {\r\n        scorecard[currentInning][\"current_ball\"] = current_ball + 1;\r\n      }\r\n\r\n      matchdata = {\r\n        ...matchdata,\r\n        data: {\r\n          ...matchdata.matchData,\r\n          scorecard,\r\n        },\r\n        update: matchdata.update + 1,\r\n      };\r\n\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"matches-page-wrapper full-height mt-2\">\r\n        <div className=\"p-2 h5 text-secondary border-bottom justify-content-between d-flex align-items-center\">\r\n          <div>\r\n            {matchdata.team_1?.name} <span className=\"smaller\">Vs</span>{\" \"}\r\n            {matchdata.team_2?.name}\r\n            <span className=\"smaller ml-2\">\r\n              {firstInnings ? \"1st innings\" : \"2nd innings\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"smaller\">\r\n            <div>11/09/1992</div>\r\n            <div>Overs: {matchdata.overs}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"border-bottom p-1\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <div className=\"mr-3\">\r\n              {getTeamById(matchdata.matchData?.batting_first)?.name}\r\n            </div>\r\n            <div className=\"h1 mr-3\">\r\n              {matchdata.matchData?.scorecard?.[currentInning]?.runs} -{\" \"}\r\n              {matchdata.matchData?.scorecard?.[currentInning]?.wkts}\r\n            </div>\r\n            <div className=\"mr-2 pr-2\">\r\n              ({matchdata.matchData?.scorecard?.[currentInning]?.current_over}.\r\n              {matchdata.matchData?.scorecard?.[currentInning]?.current_ball} Overs)\r\n            </div>\r\n            {!firstInnings && <div className=\"border-left\"> Target 130</div>}\r\n          </div>\r\n          {!firstInnings && (\r\n            <div className=\"small\">\r\n              Need 3 from 42 balls with 3 wickets remaining.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-1 mb-1\">\r\n          {/* <p className='font-weight-bold'>Batting</p> */}\r\n          <div className=\"d-flex smaller justify-content-between border-bottom text-center pb-1\">\r\n            <div className=\"flex-3 text-left\">Batsmen</div>\r\n            <div className=\"flex-1\">Runs</div>\r\n            <div className=\"flex-1\">Balls</div>\r\n            <div className=\"flex-1\">4's</div>\r\n            <div className=\"flex-1\">6's</div>\r\n            <div className=\"flex-1\">S.Rate</div>\r\n          </div>\r\n\r\n          <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n            <React.Fragment>\r\n              <div className=\"flex-3 text-left\">{striker?.name || \"-\"} *</div>\r\n              <div className=\"flex-1\">{striker?.runs || \"-\"}</div>\r\n              <div className=\"flex-1\">{striker?.balls || \"-\"}</div>\r\n              <div className=\"flex-1\">{striker?.fours || \"-\"}</div>\r\n              <div className=\"flex-1\">{striker?.sixes || \"-\"}</div>\r\n              <div className=\"flex-1\">{striker?.srate || \"-\"}</div>\r\n            </React.Fragment>\r\n          </div>\r\n          <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n            <React.Fragment>\r\n              <div className=\"flex-3 text-left\">\r\n                {non_striker?.name || \"-\"} *\r\n              </div>\r\n              <div className=\"flex-1\">{non_striker?.runs || \"-\"}</div>\r\n              <div className=\"flex-1\">{non_striker?.balls || \"-\"}</div>\r\n              <div className=\"flex-1\">{non_striker?.fours || \"-\"}</div>\r\n              <div className=\"flex-1\">{non_striker?.sixes || \"-\"}</div>\r\n              <div className=\"flex-1\">{non_striker?.srate || \"-\"}</div>\r\n            </React.Fragment>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-1\">\r\n          {/* <p className='font-weight-bold'>Bowling</p> */}\r\n          <div className=\"d-flex smaller justify-content-between border-bottom text-center pb-1\">\r\n            <div className=\"flex-3 text-left\">Bowler</div>\r\n            <div className=\"flex-1\">Overs</div>\r\n            <div className=\"flex-1\">Runs</div>\r\n            <div className=\"flex-1\">Wkts</div>\r\n            <div className=\"flex-1\">Econ</div>\r\n            <div className=\"flex-1\">Extras</div>\r\n          </div>\r\n          <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n            <div className=\"flex-3 text-left\">{bowler_1?.name || \"-\"} *</div>\r\n            <div className=\"flex-1\">{bowler_1?.runs || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_1?.balls || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_1?.fours || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_1?.sixes || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_1?.srate || \"-\"}</div>\r\n          </div>\r\n          <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n            <div className=\"flex-3 text-left\">{bowler_2?.name || \"-\"} *</div>\r\n            <div className=\"flex-1\">{bowler_2?.runs || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_2?.balls || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_2?.fours || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_2?.sixes || \"-\"}</div>\r\n            <div className=\"flex-1\">{bowler_2?.srate || \"-\"}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-1 mt-2\">\r\n          <div className=\"d-flex smaller align-items-center\">\r\n            <div className=\"mr-2\">This Over: </div>\r\n            <div className=\"d-flex match-over\">\r\n              {balls &&\r\n                balls.map((ball) => {\r\n                  return <BallEle {...ball} />;\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"p-1 mt-1 border-bottom mt-2\">\r\n          <div\r\n            className=\"d-flex align-items-center  border-bottom pb-2 justify-content-center\"\r\n            style={{ height: \"4rem\" }}\r\n          >\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"Run\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              Run\r\n            </button>\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"Wd\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              Wide\r\n            </button>\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"Nb\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              No Ball\r\n            </button>\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"W\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              Wicket\r\n            </button>\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"B\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              Byes\r\n            </button>\r\n            <button\r\n              onClick={() => handleEvent({ ball: \"LB\", striker })}\r\n              type=\"button\"\r\n              class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n            >\r\n              Leg Byes\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center\" style={{ height: \"4rem\" }}>\r\n            <div className=\"flex-1 text-center border-right\">\r\n              <img alt=\"\"\r\n                src={undo}\r\n                width=\"40px\"\r\n                height=\"30px\"\r\n                className=\"mr-2\"\r\n                style={{ transform: \"scaleX(-1)\" }}\r\n              />\r\n              <p className=\"small mb-1\">Undo</p>\r\n            </div>\r\n            <div className=\"flex-2 border-right\">\r\n              <div className=\"d-flex align-items-center mt-2 pb-2 justify-content-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Swap Batsman\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Retire\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-1 text-center\">\r\n              <img alt=\"\" src={undo} width=\"40px\" height=\"30px\" className=\"mr-2\" />\r\n              <p className=\"small mb-1\">Redo</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        title={\"Select Runs\"}\r\n        footer={\"\"}\r\n        isOpen={modalStatus.status}\r\n        onClose={() => setModalStatus({ status: false })}\r\n      >\r\n        <div className=\"player_select_form\">\r\n          {modalStatus.type === \"run\" && (\r\n            <div className=\"p-4 text-center\">\r\n              {new Array(7).fill(0).map((v, i) => {\r\n                return (\r\n                  <button\r\n                    onClick={() =>\r\n                      submitEvent(modalStatus.type, modalStatus.ball, i)\r\n                    }\r\n                    key={`run${i}`}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary pl-4 pr-4 mr-3 mb-2\"\r\n                  >\r\n                    {i}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          {modalStatus.type === \"init\" && (\r\n            <React.Fragment>\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Striker</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Striker\"\r\n                  options={batsmanOptions}\r\n                  value={currentPlayers.striker}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"striker\");\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Non - Striker</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Non - Striker\"\r\n                  options={batsmanOptions}\r\n                  value={currentPlayers.non_striker}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"non_striker\");\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Bowler</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Bowler\"\r\n                  options={bowlerOptions}\r\n                  value={currentPlayers.bowler_1}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"bowler_1\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          {modalStatus.type === \"wicket\" && (\r\n            <React.Fragment>\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Dismissal Type</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Bowler\"\r\n                  options={dismissalOptions}\r\n                  value={currentPlayers.dismissal_type}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"dismissal_type\");\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Who Helped ?</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Bowler\"\r\n                  options={bowlerOptions}\r\n                  value={currentPlayers.dismissal_caused_by}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"dismissal_caused_by\");\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>New Batsmen</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select new batsmen\"\r\n                  options={batsmanOptions}\r\n                  value={currentPlayers.new_batsmen}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"new_batsmen\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n\r\n          <div className=\"p-2 text-center\">\r\n            <button\r\n              onClick={() => submitEvent(modalStatus.type, modalStatus.ball)}\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary pl-4 pr-4 mr-3 mb-2\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    matchData: state.match,\r\n    player: state.player,\r\n    team: state.team,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Match);\r\n","D:\\react\\scorer\\src\\pages\\AddMatch.js",["137"],"import React, { useState, useEffect,useContext } from \"react\";\r\nimport close from \"../assets/close.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../Components/Footer\";\r\n//import { getData, putData } from \"../utils/storgeService\";\r\n//import { colourOptions } from \"../Components/SingleSelect/data\";\r\nimport SingleSelect from \"../Components/SingleSelect/SingleSelect\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addingmatch } from \"../actions/actions\";\r\nimport Auth from \"../context/auth-context\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddMatch({ dispatch,team }) {\r\n  const [match, setMatchForm] = useState({\r\n    team_1: \"\",\r\n    team_2: \"\",\r\n    toss_won_by: \"\",\r\n    batting_first: \"\",\r\n    overs: 0,\r\n  });\r\n  const context = useContext(Auth);\r\n  //const [teamsOptions, setTeamsOptions] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const history = useHistory();\r\n  // useEffect(() => {\r\n  //   getTeamData();\r\n  // }, []);\r\n\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n\r\n  const handleForm = (value, key) => {\r\n    setMatchForm({ ...match, [key]: value });\r\n  };\r\n\r\n  //const getTeamData = () => {\r\n  //let teamsArr = getData('teams');\r\n\r\n  axios({\r\n    url: \"http://localhost:8000/graphql\",\r\n    method: \"post\",\r\n    data: {\r\n      query: `query{\r\n                  teams{\r\n                _id\r\n                name\r\n                score\r\n                matches\r\n                won\r\n                loss\r\n                tie\r\n              }\r\n          }`,\r\n    },\r\n  })\r\n    .then((res) => {\r\n      return setTeams(res.data.data.teams);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  let teamsOptions = [];\r\n  let teamsArr = teams;\r\n  let teamsData = teamsArr ? teamsArr : [];\r\n\r\n  let teamsOption = teamsData.map((t) => {\r\n    return {\r\n      label: t.name,\r\n      value: t._id,\r\n      color: \"#000000\",\r\n    };\r\n  });\r\n  teamsOptions = teamsOption;\r\n  // const getTeamById = (teamId) => {\r\n  //   let team = teams.find((t) => t.id === teamId);\r\n  //   return team;\r\n  // };\r\n\r\n  const createMatch = () => {\r\n    let matches = []; // getData('matches');\r\n    console.log(match);\r\n    // if (!matches) matches = [];\r\n\r\n    const date = moment();\r\n\r\n    let matchvalue = {\r\n      //  [`team_${match.team_1.value}`]: match.team_1.id,//getTeamById(match.team_1.value),\r\n      //  [`team_${match.team_2.value}`]: match.team_2.id,//getTeamById(match.team_2.value),\r\n      team_1: match.team_1,\r\n      team_2: match.team_2,\r\n      toss_won_by: match.toss_won_by,\r\n      batting_first: match.batting_first,\r\n      overs: match.overs,\r\n      date: date.format(\"DD/MM/YYYY\"),\r\n      teams: [match.team_1, match.team_2],\r\n      scorecard: {\r\n        innings_1: {\r\n          runs: 0,\r\n          wkts: 0,\r\n          current_over: 0,\r\n          current_ball: 0,\r\n          balls: [],\r\n          target: \"\",\r\n          striker: \"\",\r\n          non_striker: \"\",\r\n          bowler_1: \"\",\r\n          bowler_2: \"\",\r\n          end: false,\r\n          batting: {},\r\n        },\r\n        innings_2: {\r\n          runs: 0,\r\n          wkts: 0,\r\n          current_over: 0,\r\n          current_ball: 0,\r\n          balls: [],\r\n          target: \"\",\r\n          striker: \"\",\r\n          non_striker: \"\",\r\n          bowler_1: \"\",\r\n          bowler_2: \"\",\r\n          end: false,\r\n        },\r\n      },\r\n    };\r\n    matches = { ...matchvalue, id: matches.length + 1 };\r\n    //putData('matches', matches);\r\n    //match = matches;\r\n    // let match = matches.map((m,index)=>{\r\n    //  return { m,\r\n    //         id:index+1\r\n    //       }\r\n    // });\r\n    dispatch(addingmatch(matches));\r\n    console.log(matches);\r\n    redirectTo(\"/matches\");\r\n    const overs = +matches.overs;\r\n    const team1 = matches.team_1.label;\r\n    const team2 = matches.team_2.label;\r\n    const tossWonBy = matches.toss_won_by.label;\r\n    const battingFirst = matches.batting_first.label;\r\n\r\n    const token = context.token;\r\n    axios({\r\n      url: \"http://localhost:8000/graphql\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `mutation CreateMatch($overs:Int!,$team1:String!,$team2:String!,$tossWonBy:String!,$battingFirst:String!){\r\n                    createMatch(matchInput:{overs:$overs,team1:$team1,team2:$team2,tossWonBy:$tossWonBy,battingFirst:$battingFirst}){\r\n                     _id\r\n                     overs\r\n                     team1\r\n                     team2\r\n                     tossWonBy\r\n                     battingFirst \r\n                    }\r\n             }`,\r\n        variables: {\r\n          overs: overs,\r\n          team1: team1,\r\n          team2: team2,\r\n          tossWonBy: tossWonBy,\r\n          battingFirst: battingFirst,\r\n        },\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const team2_validation = match.team_1 === \"\";\r\n  const toss_won_by_validation = match.team_1 === \"\" || match.team_2 === \"\";\r\n  const batting_first_validation = match.toss_won_by === \"\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"add-players-wrapper full-height\">\r\n        <div className=\"p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between\">\r\n          <div>Add Match</div>\r\n          <div onClick={() => redirectTo(`/matches`)}>\r\n            <img src={close} width=\"30px\" alt=\"\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-secondary\">\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Team 1</label>\r\n            <SingleSelect\r\n              name={\"team_1\"}\r\n              placeholder=\"\"\r\n              options={teamsOptions}\r\n              value={match.team_1}\r\n              isSearchable={true}\r\n              onChange={(value) => {\r\n                handleForm(value, \"team_1\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Team 2</label>\r\n            <SingleSelect\r\n              name={\"team_2\"}\r\n              placeholder=\"\"\r\n              options={teamsOptions} //.filter((t) => t.value === match.team_1.value)}\r\n              value={match.team_2} //match.team_2}\r\n              isDisabled={team2_validation}\r\n              isSearchable={true}\r\n              onChange={(value) => {\r\n                handleForm(value, \"team_2\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Toss Won By</label>\r\n            <SingleSelect\r\n              name={\"toss_won_by\"}\r\n              placeholder=\"\"\r\n              options={teamsOptions}\r\n              //   {\r\n              //     label: match.team_1.label,\r\n              //     value: match.team_1.value,\r\n              //     color: '#000000',\r\n              //   },\r\n              //   {\r\n              //     label: match.team_2.label,\r\n              //     value: match.team_2.value,\r\n              //     color: '#000000',\r\n              //   },\r\n              // ]}\r\n              value={match.toss_won_by}\r\n              isDisabled={toss_won_by_validation}\r\n              isSearchable={true}\r\n              onChange={(value) => {\r\n                handleForm(value, \"toss_won_by\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Batting First</label>\r\n            <SingleSelect\r\n              name={\"batting_first\"}\r\n              placeholder=\"\"\r\n              options={teamsOptions}\r\n              // {[\r\n              //   {\r\n              //     label: match.team_1.label,\r\n              //     value: match.team_1.value,\r\n              //     color: '#000000',\r\n              //   },\r\n              //   {\r\n              //     label: match.team_2.label,\r\n              //     value: match.team_2.value,\r\n              //     color: '#000000',\r\n              //   },\r\n              // ]}\r\n              value={match.batting_first}\r\n              isDisabled={batting_first_validation}\r\n              isSearchable={true}\r\n              onChange={(value) => {\r\n                handleForm(value, \"batting_first\");\r\n              }}\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"\">Innings Overs</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              name=\"overs\"\r\n              id=\"\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"Enter Overs\"\r\n              value={match.overs}\r\n              onChange={(e) => {\r\n                handleForm(e.target.value, \"overs\");\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <div class=\"form-group\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-md btn-primary w-100\"\r\n              onClick={() => createMatch()}\r\n            >\r\n              Create Match\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    match: state.match,\r\n    team: state.team,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddMatch);\r\n","D:\\react\\scorer\\src\\Components\\Header\\index.js",[],"D:\\react\\scorer\\src\\Components\\Common\\Loader\\index.js",[],"D:\\react\\scorer\\src\\utils\\storgeService.js",[],"D:\\react\\scorer\\src\\Components\\SingleSelect\\SingleSelect.js",[],"D:\\react\\scorer\\src\\Components\\SingleSelect\\data.js",[],["138","139"],"D:\\react\\scorer\\src\\Components\\Footer\\index.js",[],"D:\\react\\scorer\\src\\Components\\BallEle\\index.js",[],"D:\\react\\scorer\\src\\Components\\Modal\\index.js",[],"D:\\react\\scorer\\src\\reducers\\reducers.js",[],"D:\\react\\scorer\\src\\actions\\actions.js",[],"D:\\react\\scorer\\src\\reducers\\playerreducer.js",[],"D:\\react\\scorer\\src\\reducers\\matchreducer.js",[],"D:\\react\\scorer\\src\\reducers\\teamreducer.js",[],"D:\\react\\scorer\\src\\pages\\login.js",[],"D:\\react\\scorer\\src\\context\\auth-context.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":46,"column":8,"nodeType":"146","endLine":46,"endColumn":10,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":48,"column":6,"nodeType":"146","endLine":48,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":22,"column":7,"nodeType":"152","messageId":"153","endLine":22,"endColumn":15},{"ruleId":"150","severity":1,"message":"154","line":35,"column":9,"nodeType":"152","messageId":"153","endLine":35,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"156","line":30,"column":15,"nodeType":"152","messageId":"153","endLine":30,"endColumn":22},{"ruleId":"150","severity":1,"message":"157","line":122,"column":9,"nodeType":"152","messageId":"153","endLine":122,"endColumn":19},{"ruleId":"150","severity":1,"message":"158","line":130,"column":9,"nodeType":"152","messageId":"153","endLine":130,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":169,"column":7,"nodeType":"152","messageId":"161","endLine":169,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":198,"column":7,"nodeType":"152","messageId":"161","endLine":198,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":235,"column":7,"nodeType":"152","messageId":"161","endLine":235,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"140","replacedBy":"162"},{"ruleId":"142","replacedBy":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'playersList'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["166"],"React Hook useEffect has a missing dependency: 'playerId'. Either include it or remove the dependency array.",["167"],"no-unused-vars","'playerss' is assigned a value but never used.","Identifier","unusedVar","'context' is assigned a value but never used.","'useEffect' is defined but never used.","'matchId' is assigned a value but never used.","'redirectTo' is assigned a value but never used.","'addRunEvent' is assigned a value but never used.","no-const-assign","'matchdata' is constant.","const",["164"],["165"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [dispatch, playersList]",{"range":"172","text":"173"},"Update the dependencies array to be: [playerId]",{"range":"174","text":"175"},[1276,1278],"[dispatch, playersList]",[1268,1270],"[playerId]"]