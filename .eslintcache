[{"D:\\react\\scorer\\src\\index.js":"1","D:\\react\\scorer\\src\\App.js":"2","D:\\react\\scorer\\src\\reportWebVitals.js":"3","D:\\react\\scorer\\src\\pages\\Home.js":"4","D:\\react\\scorer\\src\\utils\\ErrorBoundary.js":"5","D:\\react\\scorer\\src\\pages\\TeamList.js":"6","D:\\react\\scorer\\src\\pages\\PlayerList.js":"7","D:\\react\\scorer\\src\\pages\\Player.js":"8","D:\\react\\scorer\\src\\pages\\MatchList.js":"9","D:\\react\\scorer\\src\\pages\\Team.js":"10","D:\\react\\scorer\\src\\pages\\AddPlayer.js":"11","D:\\react\\scorer\\src\\pages\\AddTeam.js":"12","D:\\react\\scorer\\src\\pages\\Match.js":"13","D:\\react\\scorer\\src\\pages\\AddMatch.js":"14","D:\\react\\scorer\\src\\Components\\Header\\index.js":"15","D:\\react\\scorer\\src\\Components\\Common\\Loader\\index.js":"16","D:\\react\\scorer\\src\\utils\\storgeService.js":"17","D:\\react\\scorer\\src\\Components\\SingleSelect\\SingleSelect.js":"18","D:\\react\\scorer\\src\\Components\\SingleSelect\\data.js":"19","D:\\react\\scorer\\src\\Components\\Footer\\index.js":"20","D:\\react\\scorer\\src\\Components\\BallEle\\index.js":"21","D:\\react\\scorer\\src\\Components\\Modal\\index.js":"22","D:\\react\\scorer\\src\\reducers\\reducers.js":"23","D:\\react\\scorer\\src\\actions\\actions.js":"24","D:\\react\\scorer\\src\\reducers\\playerreducer.js":"25","D:\\react\\scorer\\src\\reducers\\matchreducer.js":"26","D:\\react\\scorer\\src\\reducers\\teamreducer.js":"27","D:\\react\\scorer\\src\\pages\\login.js":"28","D:\\react\\scorer\\src\\context\\auth-context.js":"29","D:\\react\\scorer\\src\\services\\playerservice.js":"30","D:\\react\\scorer\\src\\services\\teamservice.js":"31","D:\\react\\scorer\\src\\services\\matchservice.js":"32","D:\\react\\scorer\\src\\services\\loginservices.js":"33","D:\\react\\scorer\\src\\pages\\signuppage.js":"34","D:\\react\\scorer\\src\\services\\scorecardservice.js":"35","D:\\react\\scorer\\src\\pages\\WinnerPage.js":"36","D:\\react\\scorer\\src\\constants\\appConstants.js":"37"},{"size":768,"mtime":1627195413454,"results":"38","hashOfConfig":"39"},{"size":3077,"mtime":1630062211729,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1625570934243,"results":"41","hashOfConfig":"39"},{"size":706,"mtime":1629001438291,"results":"42","hashOfConfig":"39"},{"size":894,"mtime":1625570934247,"results":"43","hashOfConfig":"39"},{"size":4817,"mtime":1629347055448,"results":"44","hashOfConfig":"39"},{"size":5196,"mtime":1630034893045,"results":"45","hashOfConfig":"39"},{"size":4833,"mtime":1630035005630,"results":"46","hashOfConfig":"39"},{"size":4649,"mtime":1630149547274,"results":"47","hashOfConfig":"39"},{"size":7875,"mtime":1630154273925,"results":"48","hashOfConfig":"39"},{"size":6507,"mtime":1630158015759,"results":"49","hashOfConfig":"39"},{"size":4966,"mtime":1630158015764,"results":"50","hashOfConfig":"39"},{"size":34439,"mtime":1630158015863,"results":"51","hashOfConfig":"39"},{"size":8290,"mtime":1630151420828,"results":"52","hashOfConfig":"39"},{"size":1261,"mtime":1628848648688,"results":"53","hashOfConfig":"39"},{"size":268,"mtime":1627357564743,"results":"54","hashOfConfig":"39"},{"size":1771,"mtime":1625652363334,"results":"55","hashOfConfig":"39"},{"size":1034,"mtime":1628836544625,"results":"56","hashOfConfig":"39"},{"size":4551,"mtime":1625570934214,"results":"57","hashOfConfig":"39"},{"size":1554,"mtime":1628004364748,"results":"58","hashOfConfig":"39"},{"size":820,"mtime":1628780958846,"results":"59","hashOfConfig":"39"},{"size":2159,"mtime":1628782553704,"results":"60","hashOfConfig":"39"},{"size":291,"mtime":1626925317355,"results":"61","hashOfConfig":"39"},{"size":231,"mtime":1626925188761,"results":"62","hashOfConfig":"39"},{"size":244,"mtime":1627469427897,"results":"63","hashOfConfig":"39"},{"size":315,"mtime":1627138193366,"results":"64","hashOfConfig":"39"},{"size":236,"mtime":1626925323861,"results":"65","hashOfConfig":"39"},{"size":2545,"mtime":1630152884129,"results":"66","hashOfConfig":"39"},{"size":182,"mtime":1627450940306,"results":"67","hashOfConfig":"39"},{"size":10375,"mtime":1630158015773,"results":"68","hashOfConfig":"39"},{"size":3734,"mtime":1630158015776,"results":"69","hashOfConfig":"39"},{"size":3581,"mtime":1630158015770,"results":"70","hashOfConfig":"39"},{"size":1187,"mtime":1630158015767,"results":"71","hashOfConfig":"39"},{"size":2173,"mtime":1630152838676,"results":"72","hashOfConfig":"39"},{"size":13019,"mtime":1630158015849,"results":"73","hashOfConfig":"39"},{"size":864,"mtime":1630064779499,"results":"74","hashOfConfig":"39"},{"size":110,"mtime":1630158015755,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"uw1s6m",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\scorer\\src\\index.js",[],["159","160"],"D:\\react\\scorer\\src\\App.js",["161"],"import React, { Suspense ,useState} from 'react';\r\nimport './App.scss';\r\nimport Header from './Components/Header';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport ErrorBoundary from './utils/ErrorBoundary';\r\nimport Loader from './Components/Common/Loader';\r\nimport Auth from './context/auth-context';\r\nimport WinnerPage from './pages/WinnerPage';\r\n\r\nconst Login = React.lazy(() => import('./pages/login'));\r\nconst signup = React.lazy(() => import('./pages/signuppage'));\r\nconst Home = React.lazy(() => import('./pages/Home'));\r\nconst TeamList = React.lazy(() => import('./pages/TeamList'));\r\nconst Team = React.lazy(() => import('./pages/Team'));\r\nconst MatchList = React.lazy(() => import('./pages/MatchList'));\r\nconst Match = React.lazy(() => import('./pages/Match'));\r\nconst PlayerList = React.lazy(() => import('./pages/PlayerList'));\r\nconst Player = React.lazy(() => import('./pages/Player'));\r\nconst AddPlayer = React.lazy(() => import('./pages/AddPlayer'));\r\nconst AddTeam = React.lazy(() => import('./pages/AddTeam'));\r\nconst AddMatch = React.lazy(() => import('./pages/AddMatch'));\r\nconst Winner = React.lazy(() => import('./pages/WinnerPage'));\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const currentToken = localStorage.getItem(\"tokens\");\r\n  const currentUserId = localStorage.getItem(\"user\"); ;\r\nconst [token,setToken] = useState(currentToken);\r\nconst [userId,setUserId] = useState(currentUserId);\r\n  const login = (token, userId, tokenExpiration) => {\r\n    localStorage.setItem(\"tokens\",token);\r\n    localStorage.setItem(\"user\",userId);\r\n    setToken(token);\r\n    setUserId(userId);\r\n  };\r\n\r\n  const logout = () => {\r\n     setToken(null);\r\n     setUserId(null)\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <ErrorBoundary>\r\n        <Suspense fallback={<Loader status={true} />}>\r\n          <Auth.Provider value={{\r\n              token: token,\r\n              userId: userId,\r\n              login: login,\r\n              logout: logout\r\n            }}>\r\n          <Router>\r\n            <Header />\r\n            {!token && <Route exact path='/' component={Login} />}\r\n            {!token && <Route exact path='/signup' component={signup} />}\r\n            {token && <Route exact path='/' component={Home} />}\r\n            <Route exact path='/teams' component={TeamList} />\r\n            <Route exact path='/team/info/:teamId' component={Team} />\r\n            <Route exact path='/team/add' component={AddTeam} />\r\n            <Route exact path='/matches/' component={MatchList} />\r\n            <Route exact path='/match/info/:matchId' component={Match} />\r\n            <Route exact path='/match/add' component={AddMatch} />\r\n            <Route exact path='/players/' component={PlayerList} />\r\n            <Route exact path='/player/info/:playerId' component={Player} />\r\n            <Route exact path='/player/add' component={AddPlayer} />\r\n            <Route exact path='/winner' component={Winner} />\r\n          </Router>\r\n          </Auth.Provider>\r\n        </Suspense>\r\n      </ErrorBoundary>\r\n    </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n","D:\\react\\scorer\\src\\reportWebVitals.js",[],"D:\\react\\scorer\\src\\pages\\Home.js",["162"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../Components/Footer\";\r\nconst TeamList = React.lazy(() => import(\"./TeamList\"));\r\nconst MatchList = React.lazy(() => import(\"./MatchList\"));\r\nconst PlayerList = React.lazy(() => import(\"./PlayerList\"));\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"home-page-wrapper full-height\">\r\n        <MatchList editMode={true} />\r\n        <TeamList editMode={true} />\r\n        <PlayerList editMode={true} />\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\react\\scorer\\src\\utils\\ErrorBoundary.js",[],"D:\\react\\scorer\\src\\pages\\TeamList.js",[],"D:\\react\\scorer\\src\\pages\\PlayerList.js",["163"],"import React, { useEffect, useState,useContext } from \"react\";\r\nimport Footer from \"../Components/Footer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport plus from \"../assets/plus2.svg\";\r\nimport { addplayer } from \"../actions/actions\";\r\n//import { getData } from \"../utils/storgeService\";\r\nimport { connect } from \"react-redux\";\r\nimport Auth from \"../context/auth-context\";\r\nimport {getPlayerData} from \"../services/playerservice\";\r\nimport Loader from \"../Components/Common/Loader\";\r\n\r\nfunction PlayerList({ editMode = false, dispatch,player }) {\r\n  const history = useHistory();\r\n\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n\r\n  const [playersList, setPlayersList] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const context = useContext(Auth);\r\n   useEffect(() => {\r\n  //   let players = getData('players');\r\n  //   players?.length > 0 && setPlayersList([...players]);\r\n  setloading(true);        \r\n  getPlayerData().then((res) => {\r\n        console.log(res.data.data.players);\r\n        const players = res.data.data.players;\r\n        setloading(false);\r\n        return setPlayersList(players);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      dispatch(addplayer(playersList));\r\n    }, []);\r\n    const alloweduser = context.userId;\r\n    \r\n    const createPlayer=()=>{\r\n      redirectTo(\"/player/add\")\r\n      }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"teams-page-wrapper full-height\">\r\n        <div className=\"p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between\">\r\n          <div>Players</div>\r\n          {!editMode && (\r\n            <div onClick={() => redirectTo(`/player/add`)}>\r\n              <img src={plus} width=\"30px\" alt=\"\" style={{cursor:\"pointer\"}}/>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {\r\n        playersList.some(pl =>pl.user._id === alloweduser) ?\r\n         playersList.map((player, playerIndex) => {\r\n          return (\r\n                <div>\r\n                 {alloweduser === player.user._id ?\r\n                  <div\r\n                  className=\"border player-list-item p-2 shadow-sm mb-2\"\r\n                  key={`team-${playerIndex}`}\r\n                  onClick={() => {\r\n                    redirectTo(`/player/info/${player._id}`);\r\n                  }}\r\n                >  \r\n                  <div className=\"d-flex align-items-center\">\r\n                    <img alt=\"\"\r\n                      src={player.image ||\r\n                        \"https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png\"\r\n                      }\r\n                      className=\"rounded-circle playerpic mr-2\"\r\n                    />\r\n                    <div className=\"ml-2 w-100\">\r\n                      <div>{player.name}</div>\r\n                      <div className=\"text-muted small\">\r\n                        {player.batting_style}\r\n                      </div>\r\n                      <div className=\"h-50 d-flex player-stats align-items-center text-secondary\">\r\n                        <div className=\"mr-3\">\r\n                          Matches:{\" \"}\r\n                          <span className=\"font-weight-bold\">\r\n                            {player.matches && player.matches}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"mr-3\">\r\n                          Runs:{\" \"}\r\n                          <span className=\"font-weight-bold\">\r\n                            {player.run && player.run}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"mr-3\">\r\n                          Avg:{\" \"}\r\n                          <span className=\"font-weight-bold\">\r\n                            {player.avg && player.avg }\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          SRate:{\" \"}\r\n                          <span className=\"font-weight-bold\">\r\n                            {player.st_rate && player.st_rate}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>:null}\r\n                </div>\r\n          );\r\n            })\r\n           : <div class=\"col-md-12 text-center\"><div class=\"text-secondary mb-3\">There is no player added</div>\r\n          <button class=\"btn btn-md btn-primary w-30 ml-3\" type=\"button\" onClick={createPlayer}>create player</button></div>} \r\n          {/* !editMode && (\r\n              <p className=\" pt-5 pb-5 text-center\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-md btn-primary\"\r\n                  onClick={() => redirectTo(`/player/add`)}\r\n                >\r\n                  Create Player\r\n                </button>\r\n              </p>\r\n            )}  */}\r\n            \r\n      </div>\r\n      <Footer />\r\n      {loading && <Loader status={true}/>}\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlayerList);\r\n","D:\\react\\scorer\\src\\pages\\Player.js",["164"],"import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../Components/Footer\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n//import { getPlayerById } from \"../utils/storgeService\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPlayerById } from \"../services/playerservice\";\r\n\r\nfunction Player({ player }) {\r\n  const match = useRouteMatch();\r\n  const {\r\n    params: { playerId },\r\n  } = match;\r\n\r\n    const [playerData, setPlayerData] = useState({});\r\n  \r\n  // useEffect(() => {\r\n  //   let player = getPlayerById(+playerId);\r\n  //   player && setPlayerData({ ...player });\r\n  // }, []);\r\n //const playerId = playerId;\r\n useEffect(() => { \r\n    getPlayerById(playerId).then((res) => {\r\n      console.log(res.data.data.getPlayerById);\r\n      return setPlayerData(res.data.data.getPlayerById); \r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  \r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"player-page full-height\">\r\n        <div className=\"d-flex team-page-header justify-content-between align-items-center mt-3 border-bottom pb-2\">\r\n          <img alt=\"\"\r\n            src={\r\n              playerData.image ||\r\n              \"https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png\"\r\n            }\r\n            className=\"rounded-circle playerpic mr-3\"\r\n          />\r\n          <div className=\"h5\" style={{ textAlign: \"right\" }}>\r\n            <div>{playerData.name}</div>\r\n            <div className=\"smaller text-muted\">{playerData.batting_style}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Info</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between small mb-1\">\r\n              <div>Matches</div>\r\n              <div>{playerData.matches}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Batting</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Runs</div>\r\n              <div className=\"h3 text-info\">{playerData.run}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Avg</div>\r\n              <div>{playerData.avg}0</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>SRate</div>\r\n              <div>{playerData.st_rate} %</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Bowling</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Wkts</div>\r\n              <div className=\"h3 text-warning\">{playerData.wickets}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Bowl Avg</div>\r\n              <div>{playerData.bowl_avg}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between  align-items-center small mb-1\">\r\n              <div>Bowl SRate</div>\r\n              <div>{playerData.bowl_rate}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Overs</div>\r\n              <div>{playerData.overs}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-100 border rounded p-3 player-stats-card\">\r\n          <div className=\"font-weight-bold mb-2\">Fielding</div>\r\n          <div className=\"text-secondary\">\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Catches</div>\r\n              <div className=\"h3 text-danger\">{playerData.matches}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center small mb-1\">\r\n              <div>Run Outs</div>\r\n              <div>{playerData.runs}</div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between  align-items-center small mb-1\">\r\n              <div>Stumpings</div>\r\n              <div>{playerData.avg}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    player: state.player,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","D:\\react\\scorer\\src\\pages\\MatchList.js",[],"D:\\react\\scorer\\src\\pages\\Team.js",["165"],"D:\\react\\scorer\\src\\pages\\AddPlayer.js",[],"D:\\react\\scorer\\src\\pages\\AddTeam.js",[],"D:\\react\\scorer\\src\\pages\\Match.js",["166","167","168","169","170","171","172","173","174","175"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Footer from \"../Components/Footer\";\r\nimport undo from \"../assets/undo.svg\";\r\nimport { GetMatchById } from \"../services/matchservice\";\r\nimport Modal from \"../Components/Modal\";\r\nimport BallEle from \"../Components/BallEle\";\r\nimport SingleSelect from \"../Components/SingleSelect/SingleSelect\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createScorecard,\r\n  getScorecard,\r\n  updateScorecard,\r\n  updates,\r\n} from \"../services/scorecardservice\";\r\nimport {\r\n  getPlayerById,\r\n  updatePlayer,\r\n  updateScoreOfPlayers,\r\n} from \"../services/playerservice\";\r\n\r\nfunction Match({ matchData, player, team }) {\r\n  const dismissalOptions = [\r\n    {\r\n      label: \"Caught\",\r\n      value: \"caught\",\r\n    },\r\n    {\r\n      label: \"Bowled\",\r\n      value: \"bowled\",\r\n    },\r\n    {\r\n      label: \"Runout\",\r\n      value: \"Runout\",\r\n    },\r\n  ];\r\n  const [scorecard, setScorecard] = useState({});\r\n\r\n  let initialScorecard = {\r\n    matchStatus: \"start\",\r\n    innings1: {\r\n      runs: 0,\r\n      wickets: 0,\r\n      current_over: 0,\r\n      current_ball: 0,\r\n      target: 0,\r\n      bowler_2: \" \",\r\n      end: false,\r\n    },\r\n    innings2: {\r\n      runs: 0,\r\n      wickets: 0,\r\n      current_over: 0,\r\n      current_ball: 0,\r\n      target: 0,\r\n      bowler_2: \" \",\r\n      end: false,\r\n    },\r\n  };\r\n  const match = useRouteMatch();\r\n  const {\r\n    params: { matchId },\r\n  } = match;\r\n\r\n  const history = useHistory();\r\n  // const [matchdata, setMatchData] = useState({\r\n  //   // data: {},S\r\n  //   // update: 0,\r\n  // });\r\n\r\n  const [modalStatus, setModalStatus] = useState({\r\n    status: false,\r\n    type: \"\",\r\n  });\r\n  const [currentPlayers, setCurrentPlayers] = useState({\r\n    striker: null,\r\n    non_striker: null,\r\n    bowler_1: null,\r\n    dismissal_type: \"\",\r\n    dismissal_caused_by: \"\",\r\n    new_batsmen: null,\r\n  });\r\n  const [MatchData, setMatch] = useState(null);\r\n\r\n  const matchStartHandler = () => {\r\n    createScorecard(initialScorecard)\r\n      .then((res) => {\r\n        console.log(res.data.data.createScorecard);\r\n        setScorecard({ scorecard: res.data.data.createScorecard });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetMatchById(matchId)\r\n      .then((res) => {\r\n        return setMatch(res.data.data.getMatchById);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   let match = getMatchById(+matchId);\r\n  //   match && setMatchData({ ...matchData, data: { ...match } });\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   matchData.update > 0 && updateMatchById(matchData.matchData.id, matchData.matchData);\r\n  // }, [matchData.update]);\r\n\r\n  useEffect(() => {\r\n    // getScorecard()\r\n    //   .then((res) => {\r\n    //     console.log(res.data.data.scorecard);\r\n    //     setScorecard({ scorecard: res.data.data.scorecard });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  }, []);\r\n  // const getPlayerFromMatch = (id, teamId) => {\r\n  //   let currTeam = matchdata.matchData[`team_${teamId}`];\r\n  //   let currPlayer = currTeam.players.find((p) => p.id === id);\r\n  //   return currPlayer;\r\n  // };\r\n\r\n  const getPlayerListFromMatch = (team) => {\r\n    // currTeam = matchdata.matchData[`team_${teamId}`];\r\n    //let currPlayerList = currTeam.players.map((p) => {\r\n    const currPlayerList = team?.players.map((p) => {\r\n      return {\r\n        label: p.name,\r\n        value: p._id,\r\n      };\r\n    });\r\n    return currPlayerList;\r\n  };\r\n\r\n  const firstInnings = !scorecard?.scorecard?.innings1?.end ? true : false;\r\n  const currentInning = firstInnings ? \"innings1\" : \"innings2\";\r\n  const otherInning = !firstInnings ? \"innings1\" : \"innings2\";\r\n  const currentBattingTeam = firstInnings\r\n    ? MatchData && MatchData.team1.name === MatchData?.battingFirst\r\n      ? MatchData?.team1\r\n      : MatchData?.team2\r\n    : MatchData && MatchData.team1.name !== MatchData?.battingFirst\r\n    ? MatchData?.team1\r\n    : MatchData?.team2;\r\n\r\n  //   MatchData &&\r\n  //   (firstInnings\r\n  //     ? MatchData.battingFirst\r\n  //     : MatchData.teams.find((t) => t !== MatchData.battingFirst));\r\n\r\n  const currentBowlingTeam = firstInnings\r\n    ? MatchData && MatchData.team1.name === currentBattingTeam.name\r\n      ? MatchData?.team2\r\n      : MatchData?.team1\r\n    : MatchData && MatchData.team1.name === currentBattingTeam.name\r\n    ? MatchData?.team2\r\n    : MatchData?.team1;\r\n  //   ? matchdata.matchData?.teams.find((t) => t !== matchdata.matchData.batting_first)\r\n  //   : matchdata.matchData?.batting_first;\r\n  const striker = scorecard?.[\"scorecard\"]?.[currentInning]?.striker;\r\n  const non_striker = currentPlayers.non_striker;\r\n  const bowler_1 = currentPlayers.bowler_1;\r\n\r\n  const batsmanOptions = getPlayerListFromMatch(currentBattingTeam);\r\n  const bowlerOptions = getPlayerListFromMatch(currentBowlingTeam);\r\n  const balls = scorecard?.[\"scorecard\"]?.[currentInning]?.balls;\r\n  const redirectTo = (route) => {\r\n    history.push(route);\r\n  };\r\n  const handlePlayer = (value, key) => {\r\n    setCurrentPlayers({ ...currentPlayers, [key]: value });\r\n  };\r\n\r\n  // const addRunEvent = (run) => {\r\n  //   // check if there is a striker\r\n  // };\r\n  const swappingBatsmen = () => {\r\n    const scorecardCopy = JSON.parse(JSON.stringify(scorecard));\r\n    scorecardCopy[\"scorecard\"][otherInning].striker =\r\n      scorecardCopy[\"scorecard\"]?.[otherInning]?.striker?._id;\r\n    scorecardCopy[\"scorecard\"][otherInning].non_striker =\r\n      scorecardCopy[\"scorecard\"]?.[otherInning]?.non_striker?._id;\r\n    scorecardCopy[\"scorecard\"][otherInning].bowler_1 =\r\n      scorecardCopy[\"scorecard\"]?.[otherInning]?.bowler_1?._id;\r\n      \r\n    let bowler = scorecardCopy[\"scorecard\"]?.[currentInning]?.bowler_1?._id;\r\n    let swap = scorecardCopy[\"scorecard\"]?.[currentInning]?.striker?._id;\r\n    scorecardCopy[\"scorecard\"][currentInning].striker =\r\n      scorecardCopy[\"scorecard\"]?.[currentInning]?.non_striker?._id;\r\n    scorecardCopy[\"scorecard\"][currentInning].non_striker = swap;\r\n    scorecardCopy[\"scorecard\"][currentInning].bowler_1 = bowler;\r\n\r\n    let id = scorecardCopy.scorecard._id;\r\n    let playersSwap = scorecardCopy.scorecard;\r\n    updateScorecard(id, playersSwap)\r\n      .then((res) => {\r\n        console.log(res.data.data.updateScorecard);\r\n        setScorecard({ scorecard: res.data.data.updateScorecard });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const retireBatsman = () => {\r\n    setModalStatus({ status: true, type: \"retire\" });\r\n    // createScorecard(initialScorecard)\r\n    //   .then((res) => {\r\n    //     console.log(res.data.data.createScorecard);\r\n    //     //setScorecard(res.data.data.createScorecard);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n  const handleEvent = ({ ball, striker }) => {\r\n    // check if there is a striker\r\n    if (striker) {\r\n      if (ball === \"w\") {\r\n        setModalStatus({ status: true, ball, type: \"wicket\" });\r\n      } else {\r\n        setModalStatus({ status: true, ball, type: \"run\" });\r\n      }\r\n    } else {\r\n      //set striker and non striker\r\n      setModalStatus({ status: true, ball, type: \"init\" });\r\n    }\r\n  };\r\n  // // const ballDescriptor = (type, value ) =>{\r\n  // //   if()\r\n  // // }\r\n  const submitEvent = (type, ball, value) => {\r\n    const scorecardCopy = JSON.parse(JSON.stringify(scorecard));\r\n\r\n    if (type === \"init\") {\r\n      \r\n      scorecardCopy[\"scorecard\"][currentInning][\"striker\"] = currentPlayers?.striker?.value;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"] = currentPlayers?.non_striker?.value;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"] = currentPlayers?.bowler_1?.value;\r\n      \r\n      \r\n      //     if (\r\n      //       !currentPlayers.striker?.value ||\r\n      //       !currentPlayers.non_striker?.value ||\r\n      //       !currentPlayers.bowler_1?.value\r\n      //     )\r\n      //       return false;\r\n      //     matchdata = {\r\n      //       ...matchdata,\r\n      //       data: {\r\n      //         ...matchdata.matchData,\r\n      //         scorecard,\r\n      //       },\r\n      //       update: matchdata.update + 1,\r\n      //     };\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n\r\n    if (type === \"wicket\") {\r\n      scorecardCopy[\"scorecard\"][currentInning].wickets =\r\n        scorecardCopy[\"scorecard\"][currentInning].wickets + 1;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"].wickets =\r\n        scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"].wickets + 1;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"striker\"] = currentPlayers?.new_batsmen?.value;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"non_striker\"]?._id;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]?._id;\r\n\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n\r\n    if (type === \"run\") {\r\n      //     const { scorecard } = deepCopy(matchData.matchData);\r\n      const currentover =\r\n        scorecardCopy?.[\"scorecard\"]?.[currentInning]?.[\"current_over\"];\r\n      const currentball =\r\n        scorecardCopy?.[\"scorecard\"]?.[currentInning]?.[\"current_ball\"];\r\n      let balls = scorecardCopy?.[\"scorecard\"]?.[currentInning]?.[\"balls\"];\r\n      let ballObj = {\r\n        type: ball,\r\n        value,\r\n      };\r\n\r\n      if (currentball === 5) {\r\n        scorecardCopy[\"scorecard\"][currentInning][\"balls\"] = {\r\n          type: \"\",\r\n          value: 0,\r\n        };\r\n      } else {\r\n        balls.push(ballObj);\r\n        scorecardCopy[\"scorecard\"][currentInning][\"balls\"] = balls;\r\n      }\r\n\r\n      if (currentball === 5) {\r\n        scorecardCopy[\"scorecard\"][currentInning][\"current_ball\"] = 0;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"current_over\"] =\r\n          currentover + 1;\r\n        scorecardCopy[\"scorecard\"][currentInning].bowler_1.overs =\r\n          scorecardCopy[\"scorecard\"][currentInning].bowler_1.overs + 1;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"striker\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"striker\"]?._id;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"non_striker\"]?._id;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"] = currentPlayers?.bowler_1?.value;\r\n      } else {\r\n        scorecardCopy[\"scorecard\"][currentInning][\"current_ball\"] = currentball + 1;\r\n        //     matchdata = {\r\n        //       ...matchdata,\r\n        //       data: {\r\n        //         ...matchdata.matchData,\r\n        //         scorecard,\r\n        //       },\r\n        //       update: matchdata.update + 1,\r\n        //     };\r\n\r\n      let run = scorecardCopy?.[\"scorecard\"]?.[currentInning]?.[\"runs\"];\r\n      let currentBall =\r\n        scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\"balls\"];\r\n\r\n      if (ball === \"Run\") {\r\n        scorecardCopy[\"scorecard\"][currentInning][\"runs\"] = run + ballObj.value;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"striker\"][\"run\"] = scorecardCopy?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\"run\"] + ballObj.value;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"striker\"][\"balls\"] = currentBall + 1;\r\n        scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"].bowl_runs =\r\n          scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"].bowl_runs + ballObj.value;\r\n      }\r\n      if (ballObj.value === 1 || ballObj.value === 3 || ballObj.value === 5) {\r\n        let swap = scorecardCopy[\"scorecard\"][currentInning].striker;\r\n        scorecardCopy[\"scorecard\"][currentInning].striker =\r\n          scorecardCopy[\"scorecard\"][currentInning].non_striker;\r\n        scorecardCopy[\"scorecard\"][currentInning].non_striker = swap;\r\n      }\r\n\r\n      if (ballObj.value === 4) {\r\n        scorecardCopy[\"scorecard\"][currentInning].striker.fours =\r\n          scorecardCopy[\"scorecard\"][currentInning].striker.fours + 1;\r\n      }\r\n      if (ballObj.value === 6) {\r\n        scorecardCopy[\"scorecard\"][currentInning].striker.sixes =\r\n          scorecardCopy[\"scorecard\"][currentInning].striker.sixes + 1;\r\n      }\r\n      if (ball === \"Wd\" || ball === \"Nb\" || ball === \"B\" || ball === \"LB\") {\r\n        scorecardCopy[\"scorecard\"][currentInning][\"runs\"] = run + ballObj.value;\r\n      }\r\n\r\n      if (currentInning === \"innings1\") {\r\n        if (\r\n          scorecardCopy[\"scorecard\"][currentInning][\"current_over\"] ===\r\n            MatchData.overs ||\r\n          batsmanOptions.length ===\r\n            scorecardCopy[\"scorecard\"][currentInning].wickets\r\n        ) {\r\n          scorecardCopy[\"scorecard\"][currentInning][\"end\"] = true;\r\n          scorecardCopy[\"scorecard\"][\"innings1\"].target =\r\n            scorecardCopy[\"scorecard\"].innings1.runs;\r\n        }\r\n      }\r\n\r\n      if (currentInning === \"innings2\") {\r\n        if (\r\n          scorecardCopy[\"scorecard\"][currentInning][\"current_over\"] ===\r\n            MatchData.overs ||\r\n          scorecardCopy[\"scorecard\"][currentInning].runs >=\r\n            scorecardCopy[\"scorecard\"][otherInning].target ||\r\n          batsmanOptions.length ===\r\n            scorecardCopy[\"scorecard\"][currentInning].wickets\r\n        ) {\r\n          scorecardCopy[\"scorecard\"][currentInning][\"end\"] = true;\r\n          scorecardCopy[\"scorecard\"].matchStatus = \"end\";\r\n          redirectTo(\"/winner\");\r\n        }\r\n      }\r\n      console.log(scorecardCopy[\"scorecard\"][currentInning].striker);\r\n      scorecardCopy[\"scorecard\"][currentInning][\"striker\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"striker\"]?._id;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"non_striker\"]?._id;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"] = scorecardCopy[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]?._id;\r\n    }\r\n  setModalStatus({ status: false, type: \"\" });\r\n   }\r\n   console.log(scorecardCopy[\"scorecard\"][currentInning].striker);\r\n\r\n\r\n    if (type === \"retire\") {\r\n      scorecardCopy[\"scorecard\"][currentInning][\"striker\"] = currentPlayers.new_batsmen.value;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"] = scorecardCopy[\"scorecard\"][currentInning][\"non_striker\"]._id;\r\n      scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"] = scorecardCopy[\"scorecard\"][currentInning][\"bowler_1\"]._id;\r\n      setModalStatus({ status: false, type: \"\" });\r\n    }\r\n    console.log(scorecardCopy.scorecard);\r\n    let update = scorecardCopy.scorecard;\r\n    let Id = scorecardCopy.scorecard._id;\r\n    update[otherInning].striker = update[otherInning]?.striker?._id;\r\n    update[otherInning].non_striker = update[otherInning]?.non_striker?._id;\r\n    update[otherInning].bowler_1 = update[otherInning]?.bowler_1?._id;\r\n\r\n    update[currentInning].striker = update[currentInning].striker;\r\n    update[currentInning].non_striker = update[currentInning].non_striker;\r\n    update[currentInning].bowler_1 = update[currentInning].bowler_1;\r\n\r\n    updateScorecard(Id,update)\r\n      .then((res) => {\r\n        console.log(res.data.data.updateScorecard);\r\n        setScorecard({ scorecard: res.data.data.updateScorecard });\r\n      })\r\n      .catch((err) => console.log(err));\r\n      \r\n      if (scorecardCopy?.scorecard?.matchStatus === \"end\") {\r\n        redirectTo(\"/\");\r\n      }\r\n    };\r\n\r\n  console.log(scorecard);\r\n  let totalBalls = MatchData?.overs * 6;\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"matches-page-wrapper full-height mt-2\">\r\n        <div className=\"p-2 h5 text-secondary border-bottom justify-content-between d-flex align-items-center\">\r\n          <div>\r\n            {MatchData && MatchData.team1.name}\r\n            <span className=\"smaller\">{\"  \"}Vs</span>{\" \"}\r\n            {MatchData && MatchData.team2.name}\r\n            <span className=\"smaller ml-2\">\r\n              {firstInnings ? \"1st innings\" : \"2nd innings\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"smaller\">\r\n            <div>11/09/1992</div>\r\n            <div>{MatchData && MatchData.overs}</div>\r\n          </div>\r\n        </div>\r\n        {!scorecard?.scorecard?.matchStatus ? (\r\n          <button class=\"btn btn-primary\" onClick={matchStartHandler}>\r\n            start match\r\n          </button>\r\n        ) : (\r\n          <div>\r\n            <div className=\"border-bottom p-1\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"mr-3\">{currentBattingTeam?.name}</div>\r\n                <div className=\"h1 mr-3\">\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"runs\"] || \"0\"} -\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"wickets\"] ||\r\n                    \"0\"}\r\n                </div>\r\n                <div className=\"mr-2 pr-2\">\r\n                  (\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.current_over ||\r\n                    \"0\"}\r\n                  .\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.current_ball ||\r\n                    \"0\"}{\" \"}\r\n                  Overs)\r\n                </div>\r\n                {!firstInnings && (\r\n                  <div className=\"border-left\">\r\n                    {\" \"}\r\n                    Target:{scorecard?.[\"scorecard\"]?.innings1?.runs}{\" \"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {!firstInnings && (\r\n                <div className=\"small\">\r\n                  Need{\" \"}\r\n                  {scorecard?.[\"scorecard\"]?.[otherInning]?.runs -\r\n                    scorecard?.[\"scorecard\"]?.[currentInning]?.runs}{\" \"}\r\n                  runs from {totalBalls} balls with 3 wickets remaining.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"p-1 mb-1\">\r\n              {/* <p className='font-weight-bold'>Batting</p> */}\r\n              <div className=\"d-flex smaller justify-content-between border-bottom text-center pb-1\">\r\n                <div className=\"flex-3 text-left\">Batsmen</div>\r\n                <div className=\"flex-1\">Runs</div>\r\n                <div className=\"flex-1\">Balls</div>\r\n                <div className=\"flex-1\">4's</div>\r\n                <div className=\"flex-1\">6's</div>\r\n                <div className=\"flex-1\">S.Rate</div>\r\n              </div>\r\n\r\n              <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n                <React.Fragment>\r\n                  <div className=\"flex-3 text-left\">\r\n                    {\r\n                      scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                        \"name\"\r\n                      ]\r\n                    }\r\n                    *\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                      \"run\"\r\n                    ] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                      \"balls\"\r\n                    ] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                      \"fours\"\r\n                    ] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                      \"sixes\"\r\n                    ] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"striker\"]?.[\r\n                      \"st_rate\"\r\n                    ] || \"-\"}\r\n                  </div>\r\n                </React.Fragment>\r\n              </div>\r\n              <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n                <React.Fragment>\r\n                  <div className=\"flex-3 text-left\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"non_striker\"]\r\n                      ?.name || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {\r\n                      scorecard?.[\"scorecard\"]?.[currentInning]?.[\"non_striker\"]\r\n                        ?.run\r\n                    }\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\r\n                      \"non_striker\"\r\n                    ]?.[\"balls\"] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\r\n                      \"non_striker\"\r\n                    ]?.[\"fours\"] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\r\n                      \"non_striker\"\r\n                    ]?.[\"sixes\"] || \"-\"}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    {scorecard?.[\"scorecard\"]?.[currentInning]?.[\r\n                      \"non_striker\"\r\n                    ]?.[\"st_rate\"] || \"-\"}\r\n                  </div>\r\n                </React.Fragment>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-1\">\r\n              {/* <p className='font-weight-bold'>Bowling</p> */}\r\n              <div className=\"d-flex smaller justify-content-between border-bottom text-center pb-1\">\r\n                <div className=\"flex-3 text-left\">Bowler</div>\r\n                <div className=\"flex-1\">Overs</div>\r\n                <div className=\"flex-1\">Runs</div>\r\n                <div className=\"flex-1\">Wkts</div>\r\n                <div className=\"flex-1\">Econ</div>\r\n                <div className=\"flex-1\">Extras</div>\r\n              </div>\r\n              <div className=\"d-flex small justify-content-between text-center pt-1\">\r\n                <div className=\"flex-3 text-left\">\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]\r\n                    ?.name || \"-\"}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]\r\n                    ?.overs || \"-\"}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]\r\n                    ?.bowl_runs || \"-\"}\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  {scorecard?.[\"scorecard\"]?.[currentInning]?.[\"bowler_1\"]\r\n                    ?.wickets || \"-\"}\r\n                </div>\r\n                <div className=\"flex-1\">{/*bowler_1?.sixes || \"-\"*/}-</div>\r\n                <div className=\"flex-1\">{/*bowler_1?.srate || \"-\"*/}-</div>\r\n              </div>\r\n              {/*<div className=\"d-flex small justify-content-between text-center pt-1\">\r\n                <div className=\"flex-3 text-left\">\r\n                  bowler_2?.name || \"-\" kholi\r\n                </div>\r\n                <div className=\"flex-1\">bowler_2?.runs || \"-\"3</div>\r\n                <div className=\"flex-1\">bowler_2?.balls || \"-\"25</div>\r\n                <div className=\"flex-1\">bowler_2?.fours || \"-\"2</div>\r\n                <div className=\"flex-1\">bowler_2?.sixes || \"-\"-</div>\r\n                <div className=\"flex-1\">bowler_2?.srate || \"-\"-</div>\r\n              </div>*/}\r\n            </div>\r\n            <div className=\"p-1 mt-2\">\r\n              <div className=\"d-flex smaller align-items-center\">\r\n                <div className=\"mr-2\">This Over: </div>\r\n\r\n                <div className=\"d-flex match-over\">\r\n                  {balls &&\r\n                    balls.map((ball) => {\r\n                      return (\r\n                        <BallEle\r\n                          {...ball}\r\n                          className=\"border-danger bg-danger text-white font-weight-bold\"\r\n                        />\r\n                      );\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-1 mt-1 border-bottom mt-2\">\r\n              <div\r\n                className=\"d-flex align-items-center  border-bottom pb-2 justify-content-center\"\r\n                style={{ height: \"4rem\" }}\r\n              >\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"Run\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Run\r\n                </button>\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"Wd\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Wide\r\n                </button>\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"Nb\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  No Ball\r\n                </button>\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"w\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Wicket\r\n                </button>\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"B\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Byes\r\n                </button>\r\n                <button\r\n                  onClick={() => handleEvent({ ball: \"LB\", striker })}\r\n                  type=\"button\"\r\n                  class=\"btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2\"\r\n                >\r\n                  Leg Byes\r\n                </button>\r\n              </div>\r\n\r\n              <div\r\n                className=\"d-flex align-items-center\"\r\n                style={{ height: \"4rem\" }}\r\n              >\r\n                <div className=\"flex-1 text-center border-right\">\r\n                  <img\r\n                    alt=\"\"\r\n                    src={undo}\r\n                    width=\"40px\"\r\n                    height=\"30px\"\r\n                    className=\"mr-2\"\r\n                    style={{ transform: \"scaleX(-1)\" }}\r\n                  />\r\n                  <p className=\"small mb-1\">Undo</p>\r\n                </div>\r\n                <div className=\"flex-2 border-right\">\r\n                  <div className=\"d-flex align-items-center mt-2 pb-2 justify-content-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                      onClick={swappingBatsmen}\r\n                    >\r\n                      Swap Batsman\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={retireBatsman}\r\n                      class=\"btn btn-outline-primary smaller pl-2 pr-2 mr-2\"\r\n                    >\r\n                      Retire\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-1 text-center\">\r\n                  <img\r\n                    alt=\"\"\r\n                    src={undo}\r\n                    width=\"40px\"\r\n                    height=\"30px\"\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <p className=\"small mb-1\">Redo</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {\r\n        <Modal\r\n          title={\"Select Runs\"}\r\n          footer={\"\"}\r\n          isOpen={modalStatus.status}\r\n          onClose={() => setModalStatus({ status: false })}\r\n        >\r\n          <div className=\"player_select_form\">\r\n            {modalStatus.type === \"run\" && (\r\n              <div className=\"p-4 text-center\">\r\n                {new Array(7).fill(0).map((v, i) => {\r\n                  return (\r\n                    <button\r\n                      onClick={() =>\r\n                        submitEvent(modalStatus.type, modalStatus.ball, i)\r\n                      }\r\n                      key={`run${i}`}\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-secondary pl-4 pr-4 mr-3 mb-2\"\r\n                    >\r\n                      {i}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n            {modalStatus.type === \"init\" && (\r\n              <React.Fragment>\r\n                <div className=\"p-2\">\r\n                  <p>\r\n                    <b>Striker</b>\r\n                  </p>\r\n                  <SingleSelect\r\n                    name={\"players\"}\r\n                    placeholder=\"Select Striker\"\r\n                    options={batsmanOptions}\r\n                    value={currentPlayers.striker}\r\n                    isSearchable={true}\r\n                    onChange={(value) => {\r\n                      handlePlayer(value, \"striker\");\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"p-2\">\r\n                  <p>\r\n                    <b>Non - Striker</b>\r\n                  </p>\r\n                  <SingleSelect\r\n                    name={\"players\"}\r\n                    placeholder=\"Select Non - Striker\"\r\n                    options={batsmanOptions}\r\n                    value={currentPlayers.non_striker}\r\n                    isSearchable={true}\r\n                    onChange={(value) => {\r\n                      handlePlayer(value, \"non_striker\");\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"p-2\">\r\n                  <p>\r\n                    <b>Bowler</b>\r\n                  </p>\r\n                  <SingleSelect\r\n                    name={\"players\"}\r\n                    placeholder=\"Select Bowler\"\r\n                    options={bowlerOptions}\r\n                    value={currentPlayers.bowler_1}\r\n                    isSearchable={true}\r\n                    onChange={(value) => {\r\n                      handlePlayer(value, \"bowler_1\");\r\n                    }}\r\n                  />\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n            {scorecard?.[\"scorecard\"]?.[currentInning]?.current_ball === 5 && (\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>Bowler</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select Bowler\"\r\n                  options={bowlerOptions}\r\n                  value={currentPlayers.bowler_1}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"bowler_1\");\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {modalStatus.type === \"wicket\" && (\r\n              <React.Fragment>\r\n                <div className=\"p-2\">\r\n                  <p>\r\n                    <b>Dismissal Type</b>\r\n                  </p>\r\n                  <SingleSelect\r\n                    name={\"players\"}\r\n                    placeholder=\"Dismissal Type\"\r\n                    options={dismissalOptions}\r\n                    value={currentPlayers.dismissal_type}\r\n                    isSearchable={true}\r\n                    onChange={(value) => {\r\n                      handlePlayer(value, \"dismissal_type\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                {\r\n                  <div className=\"p-2\">\r\n                    <p>\r\n                      <b>Who Helped ?</b>\r\n                    </p>\r\n                    <SingleSelect\r\n                      name={\"players\"}\r\n                      placeholder=\"Select Bowler\"\r\n                      options={bowlerOptions}\r\n                      value={currentPlayers.dismissal_caused_by}\r\n                      isSearchable={true}\r\n                      onChange={(value) => {\r\n                        handlePlayer(value, \"dismissal_caused_by\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                }\r\n                <div className=\"p-2\">\r\n                  <p>\r\n                    <b>New Batsmen</b>\r\n                  </p>\r\n                  <SingleSelect\r\n                    name={\"players\"}\r\n                    placeholder=\"Select new batsmen\"\r\n                    options={batsmanOptions}\r\n                    value={currentPlayers.new_batsmen}\r\n                    isSearchable={true}\r\n                    onChange={(value) => {\r\n                      handlePlayer(value, \"new_batsmen\");\r\n                    }}\r\n                  />\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n            {modalStatus.type === \"retire\" && (\r\n              <div className=\"p-2\">\r\n                <p>\r\n                  <b>New Batsmen</b>\r\n                </p>\r\n                <SingleSelect\r\n                  name={\"players\"}\r\n                  placeholder=\"Select new batsmen\"\r\n                  options={batsmanOptions}\r\n                  value={currentPlayers.new_batsmen}\r\n                  isSearchable={true}\r\n                  onChange={(value) => {\r\n                    handlePlayer(value, \"new_batsmen\");\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"p-2 text-center\">\r\n              <button\r\n                onClick={() => submitEvent(modalStatus.type, modalStatus.ball)}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary pl-4 pr-4 mr-3 mb-2\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      }\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    matchData: state.match,\r\n    player: state.player,\r\n    team: state.team,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Match);\r\n","D:\\react\\scorer\\src\\pages\\AddMatch.js",[],"D:\\react\\scorer\\src\\Components\\Header\\index.js",[],"D:\\react\\scorer\\src\\Components\\Common\\Loader\\index.js",[],"D:\\react\\scorer\\src\\utils\\storgeService.js",[],["176","177"],"D:\\react\\scorer\\src\\Components\\SingleSelect\\SingleSelect.js",[],"D:\\react\\scorer\\src\\Components\\SingleSelect\\data.js",[],["178","179"],"D:\\react\\scorer\\src\\Components\\Footer\\index.js",[],"D:\\react\\scorer\\src\\Components\\BallEle\\index.js",[],"D:\\react\\scorer\\src\\Components\\Modal\\index.js",[],"D:\\react\\scorer\\src\\reducers\\reducers.js",[],"D:\\react\\scorer\\src\\actions\\actions.js",[],"D:\\react\\scorer\\src\\reducers\\playerreducer.js",[],"D:\\react\\scorer\\src\\reducers\\matchreducer.js",[],"D:\\react\\scorer\\src\\reducers\\teamreducer.js",[],"D:\\react\\scorer\\src\\pages\\login.js",["180"],"D:\\react\\scorer\\src\\context\\auth-context.js",[],"D:\\react\\scorer\\src\\services\\playerservice.js",[],"D:\\react\\scorer\\src\\services\\teamservice.js",[],"D:\\react\\scorer\\src\\services\\matchservice.js",[],"D:\\react\\scorer\\src\\services\\loginservices.js",[],"D:\\react\\scorer\\src\\pages\\signuppage.js",["181"],"D:\\react\\scorer\\src\\services\\scorecardservice.js",[],"D:\\react\\scorer\\src\\pages\\WinnerPage.js",["182"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport trophy from \"../assets/trophy.png\";\r\nimport close from \"../assets/close.png\";\r\n\r\nconst WinnerPage = ()=>{\r\n     const history = useHistory();\r\n    \r\n     const redirectTo = (route) => {\r\n        history.push(route);\r\n      };\r\n    \r\nreturn(\r\n    <div>\r\n        <h1><center>Congratulations</center></h1>\r\n   <div class=\"float-right\" style={{marginRightt:\"30px\"}} onClick={() => redirectTo(`/`)}>\r\n             <img  alt=\"\" src={close} width=\"30px\" alt=\"\" style={{ cursor: \"pointer\" }}/>    \r\n            </div>\r\n    <img class=\"rounded mx-auto d-block\" alt=\"\" height=\"240px\" src={trophy}/>\r\n    <div class=\"text-center\"><h3>Mumbai Indians</h3></div>\r\n    <div class=\"text-center\"> <h5>Mumbai Indians wins match by 3 wickets</h5></div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default WinnerPage;","D:\\react\\scorer\\src\\constants\\appConstants.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":18},{"ruleId":"187","severity":1,"message":"191","line":10,"column":9,"nodeType":"189","messageId":"190","endLine":10,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":36,"column":8,"nodeType":"194","endLine":36,"endColumn":10,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":30,"column":6,"nodeType":"194","endLine":30,"endColumn":8,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"198","line":48,"column":6,"nodeType":"194","endLine":48,"endColumn":8,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"200","line":14,"column":3,"nodeType":"189","messageId":"190","endLine":14,"endColumn":10},{"ruleId":"187","severity":1,"message":"201","line":17,"column":3,"nodeType":"189","messageId":"190","endLine":17,"endColumn":16},{"ruleId":"187","severity":1,"message":"202","line":18,"column":3,"nodeType":"189","messageId":"190","endLine":18,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":19,"column":3,"nodeType":"189","messageId":"190","endLine":19,"endColumn":23},{"ruleId":"192","severity":1,"message":"204","line":104,"column":6,"nodeType":"194","endLine":104,"endColumn":8,"suggestions":"205"},{"ruleId":"187","severity":1,"message":"206","line":168,"column":9,"nodeType":"189","messageId":"190","endLine":168,"endColumn":20},{"ruleId":"187","severity":1,"message":"207","line":169,"column":9,"nodeType":"189","messageId":"190","endLine":169,"endColumn":17},{"ruleId":"208","severity":1,"message":"209","line":401,"column":37,"nodeType":"210","messageId":"211","endLine":401,"endColumn":66},{"ruleId":"208","severity":1,"message":"212","line":402,"column":41,"nodeType":"210","messageId":"211","endLine":402,"endColumn":74},{"ruleId":"208","severity":1,"message":"213","line":403,"column":38,"nodeType":"210","messageId":"211","endLine":403,"endColumn":68},{"ruleId":"183","replacedBy":"214"},{"ruleId":"185","replacedBy":"215"},{"ruleId":"183","replacedBy":"216"},{"ruleId":"185","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":76,"column":9,"nodeType":"220","endLine":83,"endColumn":10},{"ruleId":"187","severity":1,"message":"221","line":8,"column":9,"nodeType":"189","messageId":"190","endLine":8,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":17,"column":52,"nodeType":"224","endLine":17,"endColumn":58},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'WinnerPage' is defined but never used.","Identifier","unusedVar","'redirectTo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'playersList'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'playerId'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'teamId'. Either include it or remove the dependency array.",["229"],"'updates' is defined but never used.","'getPlayerById' is defined but never used.","'updatePlayer' is defined but never used.","'updateScoreOfPlayers' is defined but never used.","React Hook useEffect has a missing dependency: 'matchId'. Either include it or remove the dependency array.",["230"],"'non_striker' is assigned a value but never used.","'bowler_1' is assigned a value but never used.","no-self-assign","'update[currentInning].striker' is assigned to itself.","MemberExpression","selfAssignment","'update[currentInning].non_striker' is assigned to itself.","'update[currentInning].bowler_1' is assigned to itself.",["225"],["226"],["225"],["226"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'context' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [dispatch, playersList]",{"range":"239","text":"240"},"Update the dependencies array to be: [playerId]",{"range":"241","text":"242"},"Update the dependencies array to be: [teamId]",{"range":"243","text":"244"},"Update the dependencies array to be: [matchId]",{"range":"245","text":"246"},[1275,1277],"[dispatch, playersList]",[899,901],"[playerId]",[1750,1752],"[teamId]",[2491,2493],"[matchId]"]