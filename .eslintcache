[{"/Users/saravanan/scorer/src/index.js":"1","/Users/saravanan/scorer/src/reportWebVitals.js":"2","/Users/saravanan/scorer/src/App.js":"3","/Users/saravanan/scorer/src/pages/MatchList.js":"4","/Users/saravanan/scorer/src/pages/Team.js":"5","/Users/saravanan/scorer/src/pages/TeamList.js":"6","/Users/saravanan/scorer/src/utils/ErrorBoundary.js":"7","/Users/saravanan/scorer/src/pages/Home.js":"8","/Users/saravanan/scorer/src/pages/Match.js":"9","/Users/saravanan/scorer/src/pages/Player.js":"10","/Users/saravanan/scorer/src/pages/PlayerList.js":"11","/Users/saravanan/scorer/src/pages/AddPlayer.js":"12","/Users/saravanan/scorer/src/pages/AddMatch.js":"13","/Users/saravanan/scorer/src/pages/AddTeam.js":"14","/Users/saravanan/scorer/src/Components/Header/index.js":"15","/Users/saravanan/scorer/src/Components/Common/Loader/index.js":"16","/Users/saravanan/scorer/src/utils/storgeService.js":"17","/Users/saravanan/scorer/src/Components/SingleSelect/data.js":"18","/Users/saravanan/scorer/src/Components/SingleSelect/SingleSelect.js":"19","/Users/saravanan/scorer/src/Components/Footer/index.js":"20","/Users/saravanan/scorer/src/Components/Modal/index.js":"21","/Users/saravanan/scorer/src/Components/BallEle/index.js":"22"},{"size":500,"mtime":1611707229471,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611707229472,"results":"25","hashOfConfig":"24"},{"size":1833,"mtime":1612534311628,"results":"26","hashOfConfig":"24"},{"size":2505,"mtime":1613787438356,"results":"27","hashOfConfig":"24"},{"size":5501,"mtime":1613908461521,"results":"28","hashOfConfig":"24"},{"size":2532,"mtime":1612533243253,"results":"29","hashOfConfig":"24"},{"size":858,"mtime":1612083911023,"results":"30","hashOfConfig":"24"},{"size":540,"mtime":1612533338254,"results":"31","hashOfConfig":"24"},{"size":18713,"mtime":1613919512805,"results":"32","hashOfConfig":"24"},{"size":4086,"mtime":1612452894493,"results":"33","hashOfConfig":"24"},{"size":3225,"mtime":1612533332904,"results":"34","hashOfConfig":"24"},{"size":4036,"mtime":1613908845747,"results":"35","hashOfConfig":"24"},{"size":6596,"mtime":1613918097477,"results":"36","hashOfConfig":"24"},{"size":2730,"mtime":1613140219748,"results":"37","hashOfConfig":"24"},{"size":621,"mtime":1612092766112,"results":"38","hashOfConfig":"24"},{"size":251,"mtime":1612080776332,"results":"39","hashOfConfig":"24"},{"size":1711,"mtime":1613916833833,"results":"40","hashOfConfig":"24"},{"size":4433,"mtime":1612570671602,"results":"41","hashOfConfig":"24"},{"size":990,"mtime":1612572298108,"results":"42","hashOfConfig":"24"},{"size":1434,"mtime":1612083714613,"results":"43","hashOfConfig":"24"},{"size":2052,"mtime":1613914378324,"results":"44","hashOfConfig":"24"},{"size":783,"mtime":1613919619312,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5xm3bc",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/saravanan/scorer/src/index.js",[],["105","106"],"/Users/saravanan/scorer/src/reportWebVitals.js",[],"/Users/saravanan/scorer/src/App.js",[],"/Users/saravanan/scorer/src/pages/MatchList.js",["107","108"],"import React, { useEffect, useState } from 'react';\nimport Footer from '../Components/Footer';\nimport { useHistory } from 'react-router-dom';\nimport plus from '../assets/plus2.svg';\nimport { getData } from '../utils/storgeService';\n\nexport default function MatchList({ editMode = false }) {\n  const history = useHistory();\n\n  const [matchList, setMatchList] = useState([]);\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  useEffect(() => {\n    let matches = getData('matches');\n    matches?.length > 0 && setMatchList([...matches]);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='matches-page-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Matches</div>\n          {!editMode && (\n            <div onClick={() => redirectTo(`/match/add`)}>\n              <img src={plus} width='30px' />\n            </div>\n          )}\n        </div>\n        {matchList.map((match, matchIndex) => {\n          return (\n            <div\n              className='border team-list-item p-2 shadow-sm mb-2'\n              key={`team-${matchIndex}`}\n              onClick={() => {\n                redirectTo(`/match/info/${match.id}`);\n              }}\n            >\n              <div className='d-flex align-items-center'>\n                <img\n                  src={'https://img2.pngio.com/clipart-cricket-batsman-logo-cricket-logo-png-900_520.jpg'}\n                  className='rounded-circle teampic'\n                />\n                <div className='ml-2 w-100'>\n                  <div>\n                    <span className='font-weight-bold'>{match.team_1.name}</span> <span className='smaller'>Vs</span>{' '}\n                    <span className='font-weight-bold'>{match.team_2.name}</span>\n                  </div>\n                  <div className='d-flex team-stats align-items-center text-secondary'>\n                    <div className='mr-3'>\n                      Overs: <span className='font-weight-bold'>{match.overs}</span>\n                    </div>\n                    <div className='mr-3'>\n                      Players Per Side: <span className='font-weight-bold'>{match.players_per_team}</span>\n                    </div>\n                  </div>\n                  <div className='text-secondary smaller'>11/09/1992</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/Team.js",["109","110","111","112"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport SingleSelect from '../Components/SingleSelect/SingleSelect';\nimport { getTeamById, getData, updateTeamById, getPlayerById } from '../utils/storgeService';\n\nexport default function Team() {\n  const match = useRouteMatch();\n  const {\n    params: { teamId },\n  } = match;\n  const history = useHistory();\n\n  const [teamData, setTeamData] = useState({});\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState({});\n  // const [updateData, setUpdateData] = useState(0)\n\n  useEffect(() => {\n    let team = getTeamById(+teamId);\n    team && setTeamData({ ...team });\n\n    let players = getData('players');\n    players?.length > 0 && setPlayers([...players]);\n  }, []);\n\n  useEffect(() => {\n    updateTeamById(teamData.id, teamData);\n  }, [teamData.players]);\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const handlePlayer = (player) => {\n    setSelectedPlayer({ ...player });\n  };\n\n  const addPlayerToTeam = () => {\n    const player = getPlayerById(selectedPlayer.id);\n    setTeamData({\n      ...teamData,\n      players: [...teamData.players, player],\n    });\n  };\n\n  const playerOptions = players.map((p) => {\n    return { label: p.name, id: p.id };\n  });\n\n  return (\n    <React.Fragment>\n      <div className='team-page full-height'>\n        <div className='d-flex team-page-header justify-content-between align-items-center mt-3 border-bottom pb-2'>\n          <img\n            src={teamData.image || 'https://img2.pngio.com/clipart-cricket-batsman-logo-cricket-logo-png-900_520.jpg'}\n            className='rounded-circle teampic mr-3'\n          />\n          <div className='h5 text-secondary'>{teamData.name}</div>\n        </div>\n        <div className='ml-2'>\n          <div className='d-flex small text-muted justify-content-center pt-2 team-stats align-items-center text-secondary border-bottom pb-2'>\n            <div className='mr-3'>\n              Matches: <span className='font-weight-bold'>{3}</span>\n            </div>\n            <div className='mr-3'>\n              Won: <span className='font-weight-bold text-success'>{1}</span>\n            </div>\n            <div className='mr-3'>\n              Loss: <span className='font-weight-bold text-danger'>{1}</span>\n            </div>\n            <div>\n              Tied: <span className='font-weight-bold text-info'>{1}</span>\n            </div>\n          </div>\n        </div>\n        <div className='player-list full-height mt-2 pl-0 pr-0'>\n          <div className='d-flex align-items-center justify-content-between'>\n            <div className='mr-2 flex-1'>Players</div>\n            <div className='flex-2 mr-2'>\n              <SingleSelect\n                name={'players'}\n                placeholder=''\n                options={playerOptions}\n                value={selectedPlayer}\n                isSearchable={true}\n                onChange={(value) => {\n                  handlePlayer(value, 'team_2');\n                }}\n              />\n            </div>\n            <div>\n              <button\n                type='button'\n                class='btn btn-outline-primary'\n                disabled={!selectedPlayer.id}\n                onClick={() => addPlayerToTeam()}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n          <div className='mt-3'>\n            {teamData.players &&\n              teamData.players.map((player, playerIndex) => {\n                return (\n                  <div\n                    className='border player-list-item p-2 shadow-sm mb-2'\n                    key={`team-${playerIndex}`}\n                    onClick={() => {\n                      redirectTo(`/player/info/${player.id}`);\n                    }}\n                  >\n                    <div className='d-flex align-items-center'>\n                      <img\n                        src={\n                          player.image ||\n                          'https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png'\n                        }\n                        className='rounded-circle playerpic mr-2'\n                      />\n                      <div className='ml-2 w-100'>\n                        <div>{player.name}</div>\n                        <div className='text-muted small'>Right Hand Batsmen</div>\n                        <div className='h-50 d-flex player-stats align-items-center text-secondary'>\n                          <div className='mr-3'>\n                            Matches: <span className='font-weight-bold'>{player.matches}</span>\n                          </div>\n                          <div className='mr-3'>\n                            Runs: <span className='font-weight-bold'>{player.runs}</span>\n                          </div>\n                          <div className='mr-3'>\n                            Avg: <span className='font-weight-bold'>{player.avg}</span>\n                          </div>\n                          <div>\n                            SRate: <span className='font-weight-bold'>{player.srate}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/TeamList.js",["113","114"],"import React, { useEffect, useState } from 'react';\nimport Footer from '../Components/Footer';\nimport { useHistory } from 'react-router-dom';\nimport plus from '../assets/plus2.svg';\nimport { getData } from '../utils/storgeService';\n\nexport default function TeamList({ editMode }) {\n  const history = useHistory();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const [teamsList, setTeamsList] = useState([]);\n\n  useEffect(() => {\n    let teams = getData('teams');\n    teams?.length > 0 && setTeamsList([...teams]);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='teams-page-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Teams</div>\n          {!editMode && (\n            <div onClick={() => redirectTo(`/team/add`)}>\n              <img src={plus} width='30px' />\n            </div>\n          )}\n        </div>\n        {teamsList.map((team, teamIndex) => {\n          return (\n            <div\n              className='border team-list-item p-2 shadow-sm mb-2'\n              key={`team-${teamIndex}`}\n              onClick={() => {\n                redirectTo(`/team/info/${team.id}`);\n              }}\n            >\n              <div className='d-flex'>\n                <img\n                  src={'https://img2.pngio.com/clipart-cricket-batsman-logo-cricket-logo-png-900_520.jpg'}\n                  className='rounded-circle teampic'\n                />\n                <div className='ml-2 w-100'>\n                  <div className='h-50'>{team.name}</div>\n                  <div className='h-50 d-flex team-stats align-items-center text-secondary'>\n                    <div className='mr-3'>\n                      Matches: <span className='font-weight-bold'>{team.matches}</span>\n                    </div>\n                    <div className='mr-3'>\n                      Won: <span className='font-weight-bold text-success'>{team.won}</span>\n                    </div>\n                    <div className='mr-3'>\n                      Loss: <span className='font-weight-bold text-danger'>{team.loss}</span>\n                    </div>\n                    <div>\n                      Tied: <span className='font-weight-bold text-info'>{team.tied}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        {/* <Loader status={true} /> */}\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/utils/ErrorBoundary.js",[],"/Users/saravanan/scorer/src/pages/Home.js",[],"/Users/saravanan/scorer/src/pages/Match.js",["115","116","117","118","119","120","121"],"import React, { useState, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport undo from '../assets/undo.svg';\nimport { getMatchById, getTeamById, getPlayerById, deepCopy, updateMatchById } from '../utils/storgeService';\nimport Modal from '../Components/Modal';\nimport BallEle from '../Components/BallEle';\nimport SingleSelect from '../Components/SingleSelect/SingleSelect';\n\nconst dismissalOptions = [\n  {\n    label: 'Caught',\n    value: 'caught',\n  },\n  {\n    label: 'Bowled',\n    value: 'bowled',\n  },\n];\nexport default function Match() {\n  const match = useRouteMatch();\n  const {\n    params: { matchId },\n  } = match;\n  const history = useHistory();\n  const [matchData, setMatchData] = useState({\n    data: {},\n    update: 0,\n  });\n  const [modalStatus, setModalStatus] = useState({\n    status: false,\n    type: '',\n  });\n  const [currentPlayers, setCurrentPlayers] = useState({\n    striker: null,\n    non_striker: null,\n    bowler_1: null,\n    dismissal_type: '',\n    dismissal_caused_by: '',\n    new_batsmen: null,\n  });\n\n  useEffect(() => {\n    let match = getMatchById(+matchId);\n    match && setMatchData({ ...matchData, data: { ...match } });\n  }, []);\n\n  useEffect(() => {\n    matchData.update > 0 && updateMatchById(matchData.data.id, matchData.data);\n  }, [matchData.update]);\n\n  if (!matchData?.data?.teams) return '';\n\n  const getPlayerFromMatch = (id, teamId) => {\n    let currTeam = matchData.data[`team_${teamId}`];\n    let currPlayer = currTeam.players.find((p) => p.id === id);\n    return currPlayer;\n  };\n\n  const getPlayerListFromMatch = (teamId) => {\n    let currTeam = matchData.data[`team_${teamId}`];\n    let currPlayerList = currTeam.players.map((p) => {\n      return {\n        label: p.name,\n        value: p.id,\n      };\n    });\n    return currPlayerList;\n  };\n\n  const firstInnings = !matchData.data?.scorecard?.innings_1?.end ? true : false;\n  const currentInning = firstInnings ? 'innings_1' : 'innings_2';\n\n  const currentBattingTeam = firstInnings\n    ? matchData.data?.batting_first\n    : matchData.data?.teams.find((t) => t !== matchData.data.batting_first);\n\n  const currentBowlingTeam = firstInnings\n    ? matchData.data?.teams.find((t) => t !== matchData.data.batting_first)\n    : matchData.data?.batting_first;\n\n  const striker =\n    currentBattingTeam && getPlayerFromMatch(matchData.data?.scorecard?.[currentInning]?.striker, currentBattingTeam);\n  const non_striker =\n    currentBattingTeam &&\n    getPlayerFromMatch(matchData.data?.scorecard?.[currentInning]?.non_striker, currentBattingTeam);\n  const bowler_1 =\n    currentBowlingTeam && getPlayerFromMatch(matchData.data?.scorecard?.[currentInning]?.bowler_1, currentBowlingTeam);\n  const bowler_2 =\n    currentBowlingTeam && getPlayerFromMatch(matchData.data?.scorecard?.[currentInning]?.bowler_2, currentBowlingTeam);\n\n  const current_over = matchData.data?.scorecard?.[currentInning]?.current_over;\n  const balls = matchData.data?.scorecard?.[currentInning]?.balls[current_over];\n\n  const batsmanOptions = getPlayerListFromMatch(currentBattingTeam);\n  const bowlerOptions = getPlayerListFromMatch(currentBowlingTeam);\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const handlePlayer = (value, key) => {\n    setCurrentPlayers({ ...currentPlayers, [key]: value });\n  };\n\n  const addRunEvent = (run) => {\n    // check if there is a striker\n  };\n\n  const handleEvent = ({ ball, striker }) => {\n    // check if there is a striker\n\n    if (striker) {\n      if (ball === 'W') {\n        setModalStatus({ status: true, ball, type: 'wicket' });\n      } else {\n        setModalStatus({ status: true, ball, type: 'run' });\n      }\n    } else {\n      //set striker and non striker\n      setModalStatus({ status: true, ball, type: 'init' });\n    }\n  };\n\n  // const ballDescriptor = (type, value ) =>{\n  //   if()\n  // }\n\n  const submitEvent = (type, ball, value) => {\n    if (type === 'init') {\n      const { scorecard } = deepCopy(matchData.data);\n\n      if (!currentPlayers.striker?.value || !currentPlayers.non_striker?.value || !currentPlayers.bowler_1?.value)\n        return false;\n\n      scorecard[currentInning]['striker'] = currentPlayers.striker.value;\n      scorecard[currentInning]['non_striker'] = currentPlayers.non_striker.value;\n      scorecard[currentInning]['bowler_1'] = currentPlayers.bowler_1.value;\n\n      setMatchData({\n        ...matchData,\n        data: {\n          ...matchData.data,\n          scorecard,\n        },\n        update: matchData.update + 1,\n      });\n\n      setModalStatus({ status: false, type: '' });\n    }\n\n    if (type === 'wicket') {\n      const { scorecard } = deepCopy(matchData.data);\n\n      if (\n        !currentPlayers.dismissal_type?.value ||\n        !currentPlayers.dismissal_caused_by?.value ||\n        !currentPlayers.new_batsmen?.value\n      )\n        return false;\n\n      scorecard[currentInning]['dismissal_type'] = currentPlayers.dismissal_type.value;\n      scorecard[currentInning]['dismissal_caused_by'] = currentPlayers.dismissal_caused_by.value;\n      scorecard[currentInning]['new_batsmen'] = currentPlayers.new_batsmen.value;\n\n      setMatchData({\n        ...matchData,\n        data: {\n          ...matchData.data,\n          scorecard,\n        },\n        update: matchData.update + 1,\n      });\n\n      setModalStatus({ status: false, type: '' });\n    }\n\n    if (type === 'run') {\n      const { scorecard } = deepCopy(matchData.data);\n      const current_over = scorecard[currentInning]['current_over'];\n      const current_ball = scorecard[currentInning]['current_ball'];\n      const ballnum = `${current_over}`;\n      let balls = scorecard[currentInning]['balls'];\n\n      let ballObj = {\n        type: ball,\n        value,\n      };\n\n      balls = {\n        [ballnum]: [...(balls[ballnum] ? balls[ballnum] : []), ballObj],\n      };\n\n      scorecard[currentInning]['balls'] = balls;\n\n      if (current_ball === 6) {\n        scorecard[currentInning]['current_ball'] = 0;\n        scorecard[currentInning]['current_over'] = current_over + 1;\n      } else {\n        scorecard[currentInning]['current_ball'] = current_ball + 1;\n      }\n\n      setMatchData({\n        ...matchData,\n        data: {\n          ...matchData.data,\n          scorecard,\n        },\n        update: matchData.update + 1,\n      });\n\n      setModalStatus({ status: false, type: '' });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className='matches-page-wrapper full-height mt-2'>\n        <div className='p-2 h5 text-secondary border-bottom justify-content-between d-flex align-items-center'>\n          <div>\n            {matchData.data?.team_1?.name} <span className='smaller'>Vs</span> {matchData.data?.team_2?.name}\n            <span className='smaller ml-2'>{firstInnings ? '1st innings' : '2nd innings'}</span>\n          </div>\n          <div className='smaller'>\n            <div>11/09/1992</div>\n            <div>Overs: {matchData.data.overs}</div>\n          </div>\n        </div>\n        <div className='border-bottom p-1'>\n          <div className='d-flex align-items-center'>\n            <div className='mr-3'>{getTeamById(matchData.data?.batting_first)?.name}</div>\n            <div className='h1 mr-3'>\n              {matchData.data?.scorecard?.[currentInning]?.runs} - {matchData.data?.scorecard?.[currentInning]?.wkts}\n            </div>\n            <div className='mr-2 pr-2'>\n              ({matchData.data?.scorecard?.[currentInning]?.current_over}.\n              {matchData.data?.scorecard?.[currentInning]?.current_ball} Overs)\n            </div>\n            {!firstInnings && <div className='border-left'> Target 130</div>}\n          </div>\n          {!firstInnings && <div className='small'>Need 3 from 42 balls with 3 wickets remaining.</div>}\n        </div>\n\n        <div className='p-1 mb-1'>\n          {/* <p className='font-weight-bold'>Batting</p> */}\n          <div className='d-flex smaller justify-content-between border-bottom text-center pb-1'>\n            <div className='flex-3 text-left'>Batsmen</div>\n            <div className='flex-1'>Runs</div>\n            <div className='flex-1'>Balls</div>\n            <div className='flex-1'>4's</div>\n            <div className='flex-1'>6's</div>\n            <div className='flex-1'>S.Rate</div>\n          </div>\n\n          <div className='d-flex small justify-content-between text-center pt-1'>\n            <React.Fragment>\n              <div className='flex-3 text-left'>{striker?.name || '-'} *</div>\n              <div className='flex-1'>{striker?.runs || '-'}</div>\n              <div className='flex-1'>{striker?.balls || '-'}</div>\n              <div className='flex-1'>{striker?.fours || '-'}</div>\n              <div className='flex-1'>{striker?.sixes || '-'}</div>\n              <div className='flex-1'>{striker?.srate || '-'}</div>\n            </React.Fragment>\n          </div>\n          <div className='d-flex small justify-content-between text-center pt-1'>\n            <React.Fragment>\n              <div className='flex-3 text-left'>{non_striker?.name || '-'} *</div>\n              <div className='flex-1'>{non_striker?.runs || '-'}</div>\n              <div className='flex-1'>{non_striker?.balls || '-'}</div>\n              <div className='flex-1'>{non_striker?.fours || '-'}</div>\n              <div className='flex-1'>{non_striker?.sixes || '-'}</div>\n              <div className='flex-1'>{non_striker?.srate || '-'}</div>\n            </React.Fragment>\n          </div>\n        </div>\n        <div className='p-1'>\n          {/* <p className='font-weight-bold'>Bowling</p> */}\n          <div className='d-flex smaller justify-content-between border-bottom text-center pb-1'>\n            <div className='flex-3 text-left'>Bowler</div>\n            <div className='flex-1'>Overs</div>\n            <div className='flex-1'>Runs</div>\n            <div className='flex-1'>Wkts</div>\n            <div className='flex-1'>Econ</div>\n            <div className='flex-1'>Extras</div>\n          </div>\n          <div className='d-flex small justify-content-between text-center pt-1'>\n            <div className='flex-3 text-left'>{bowler_1?.name || '-'} *</div>\n            <div className='flex-1'>{bowler_1?.runs || '-'}</div>\n            <div className='flex-1'>{bowler_1?.balls || '-'}</div>\n            <div className='flex-1'>{bowler_1?.fours || '-'}</div>\n            <div className='flex-1'>{bowler_1?.sixes || '-'}</div>\n            <div className='flex-1'>{bowler_1?.srate || '-'}</div>\n          </div>\n          <div className='d-flex small justify-content-between text-center pt-1'>\n            <div className='flex-3 text-left'>{bowler_2?.name || '-'} *</div>\n            <div className='flex-1'>{bowler_2?.runs || '-'}</div>\n            <div className='flex-1'>{bowler_2?.balls || '-'}</div>\n            <div className='flex-1'>{bowler_2?.fours || '-'}</div>\n            <div className='flex-1'>{bowler_2?.sixes || '-'}</div>\n            <div className='flex-1'>{bowler_2?.srate || '-'}</div>\n          </div>\n        </div>\n        <div className='p-1 mt-2'>\n\n          <div className='d-flex smaller align-items-center'>\n            <div className='mr-2'>This Over: </div>\n            <div className='d-flex match-over'>\n              {balls &&\n                balls.map((ball) => {\n                  return <BallEle {...ball} />;\n                })}\n            </div>\n          </div>\n        </div>\n        <div className='p-1 mt-1 border-bottom mt-2'>\n          <div\n            className='d-flex align-items-center  border-bottom pb-2 justify-content-center'\n            style={{ height: '4rem' }}\n          >\n            <button\n              onClick={() => handleEvent({ ball: 'Run', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2'\n            >\n              Run\n            </button>\n            <button\n              onClick={() => handleEvent({ ball: 'Wd', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2'\n            >\n              Wide\n            </button>\n            <button\n              onClick={() => handleEvent({ ball: 'Nb', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-primary smaller pl-2 pr-2 mr-2'\n            >\n              No Ball\n            </button>\n            <button\n              onClick={() => handleEvent({ ball: 'W', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2'\n            >\n              Wicket\n            </button>\n            <button\n              onClick={() => handleEvent({ ball: 'B', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2'\n            >\n              Byes\n            </button>\n            <button\n              onClick={() => handleEvent({ ball: 'LB', striker })}\n              type='button'\n              class='btn btn-lg btn-outline-danger smaller pl-2 pr-2 mr-2'\n            >\n              Leg Byes\n            </button>\n          </div>\n\n          <div className='d-flex align-items-center' style={{ height: '4rem' }}>\n            <div className='flex-1 text-center border-right'>\n              <img src={undo} width='40px' height='30px' className='mr-2' style={{ transform: 'scaleX(-1)' }} />\n              <p className='small mb-1'>Undo</p>\n            </div>\n            <div className='flex-2 border-right'>\n              <div className='d-flex align-items-center mt-2 pb-2 justify-content-center'>\n                <button type='button' class='btn btn-outline-primary smaller pl-2 pr-2 mr-2'>\n                  Swap Batsman\n                </button>\n                <button type='button' class='btn btn-outline-primary smaller pl-2 pr-2 mr-2'>\n                  Retire\n                </button>\n              </div>\n            </div>\n            <div className='flex-1 text-center'>\n              <img src={undo} width='40px' height='30px' className='mr-2' />\n              <p className='small mb-1'>Redo</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        title={'Select Runs'}\n        footer={''}\n        isOpen={modalStatus.status}\n        onClose={() => setModalStatus({ status: false })}\n      >\n        <div className='player_select_form'>\n          {modalStatus.type === 'run' && (\n            <div className='p-4 text-center'>\n              {new Array(7).fill(0).map((v, i) => {\n                return (\n                  <button\n                    onClick={() => submitEvent(modalStatus.type, modalStatus.ball, i)}\n                    key={`run${i}`}\n                    type='button'\n                    className='btn btn-outline-secondary pl-4 pr-4 mr-3 mb-2'\n                  >\n                    {i}\n                  </button>\n                );\n              })}\n            </div>\n          )}\n          {modalStatus.type === 'init' && (\n            <React.Fragment>\n              <div className='p-2'>\n                <p>\n                  <b>Striker</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select Striker'\n                  options={batsmanOptions}\n                  value={currentPlayers.striker}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'striker');\n                  }}\n                />\n              </div>\n\n              <div className='p-2'>\n                <p>\n                  <b>Non - Striker</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select Non - Striker'\n                  options={batsmanOptions}\n                  value={currentPlayers.non_striker}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'non_striker');\n                  }}\n                />\n              </div>\n\n              <div className='p-2'>\n                <p>\n                  <b>Bowler</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select Bowler'\n                  options={bowlerOptions}\n                  value={currentPlayers.bowler_1}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'bowler_1');\n                  }}\n                />\n              </div>\n            </React.Fragment>\n          )}\n\n          {modalStatus.type === 'wicket' && (\n            <React.Fragment>\n              <div className='p-2'>\n                <p>\n                  <b>Dismissal Type</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select Bowler'\n                  options={dismissalOptions}\n                  value={currentPlayers.dismissal_type}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'dismissal_type');\n                  }}\n                />\n              </div>\n\n              <div className='p-2'>\n                <p>\n                  <b>Who Helped ?</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select Bowler'\n                  options={bowlerOptions}\n                  value={currentPlayers.dismissal_caused_by}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'dismissal_caused_by');\n                  }}\n                />\n              </div>\n\n              <div className='p-2'>\n                <p>\n                  <b>New Batsmen</b>\n                </p>\n                <SingleSelect\n                  name={'players'}\n                  placeholder='Select new batsmen'\n                  options={batsmanOptions}\n                  value={currentPlayers.new_batsmen}\n                  isSearchable={true}\n                  onChange={(value) => {\n                    handlePlayer(value, 'new_batsmen');\n                  }}\n                />\n              </div>\n            </React.Fragment>\n          )}\n\n          <div className='p-2 text-center'>\n            <button\n              onClick={() => submitEvent(modalStatus.type, modalStatus.ball)}\n              type='button'\n              className='btn btn-outline-primary pl-4 pr-4 mr-3 mb-2'\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </Modal>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/Player.js",["122","123"],"import React, { useState, useEffect } from 'react';\nimport Footer from '../Components/Footer';\nimport { useRouteMatch } from 'react-router-dom';\nimport { getPlayerById } from '../utils/storgeService';\n\nexport default function Player() {\n  const match = useRouteMatch();\n  const {\n    params: { playerId },\n  } = match;\n\n  const [playerData, setPlayerData] = useState({});\n\n  useEffect(() => {\n    let player = getPlayerById(+playerId);\n    player && setPlayerData({ ...player });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='player-page full-height'>\n        <div className='d-flex team-page-header justify-content-between align-items-center mt-3 border-bottom pb-2'>\n          <img src={playerData.image || \"https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png\"} className='rounded-circle playerpic mr-3' />\n          <div className='h5' style={{ textAlign: 'right' }}>\n            <div>{playerData.name}</div>\n            <div className='smaller text-muted'>Right Hand Batsmen</div>\n          </div>\n        </div>\n        <div className='mt-2 w-100 border rounded p-3 player-stats-card'>\n          <div className='font-weight-bold mb-2'>Info</div>\n          <div className='text-secondary'>\n            <div className='d-flex justify-content-between small mb-1'>\n              <div>Matches</div>\n              <div>{playerData.matches}</div>\n            </div>\n          </div>\n        </div>\n        <div className='mt-2 w-100 border rounded p-3 player-stats-card'>\n          <div className='font-weight-bold mb-2'>Batting</div>\n          <div className='text-secondary'>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Runs</div>\n              <div className='h3 text-info'>{playerData.runs}</div>\n            </div>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Avg</div>\n              <div>{playerData.avg}</div>\n            </div>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>SRate</div>\n              <div>{playerData.srate} %</div>\n            </div>\n          </div>\n        </div>\n        <div className='mt-2 w-100 border rounded p-3 player-stats-card'>\n          <div className='font-weight-bold mb-2'>Bowling</div>\n          <div className='text-secondary'>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Wkts</div>\n              <div className='h3 text-warning'>{playerData.matches}</div>\n            </div>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Bowl Avg</div>\n              <div>{playerData.runs}</div>\n            </div>\n            <div className='d-flex justify-content-between  align-items-center small mb-1'>\n              <div>Bowl SRate</div>\n              <div>{playerData.avg}</div>\n            </div>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Overs</div>\n              <div>{playerData.srate} %</div>\n            </div>\n          </div>\n        </div>\n        <div className='mt-2 w-100 border rounded p-3 player-stats-card'>\n          <div className='font-weight-bold mb-2'>Fielding</div>\n          <div className='text-secondary'>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Catches</div>\n              <div className='h3 text-danger'>{playerData.matches}</div>\n            </div>\n            <div className='d-flex justify-content-between align-items-center small mb-1'>\n              <div>Run Outs</div>\n              <div>{playerData.runs}</div>\n            </div>\n            <div className='d-flex justify-content-between  align-items-center small mb-1'>\n              <div>Stumpings</div>\n              <div>{playerData.avg}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/PlayerList.js",["124","125"],"import React, { useEffect, useState } from 'react';\nimport Footer from '../Components/Footer';\nimport { useHistory } from 'react-router-dom';\nimport plus from '../assets/plus2.svg';\nimport { getData } from '../utils/storgeService';\n\nexport default function PlayerList({editMode=false}) {\n  const history = useHistory();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const [playersList, setPlayersList] = useState([]);\n\n  useEffect(() => {\n    let players = getData('players');\n    players?.length > 0 && setPlayersList([...players]);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className='teams-page-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Players</div>\n          {!editMode && (\n            <div onClick={() => redirectTo(`/player/add`)}>\n              <img src={plus} width='30px' />\n            </div>\n          )}\n        </div>\n        {playersList.length > 0\n          ? playersList.map((player, playerIndex) => {\n              return (\n                <div\n                  className='border player-list-item p-2 shadow-sm mb-2'\n                  key={`team-${playerIndex}`}\n                  onClick={() => {\n                    redirectTo(`/player/info/${player.id}`);\n                  }}\n                >\n                  <div className='d-flex align-items-center'>\n                    <img\n                      src={\n                        player.image ||\n                        'https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png'\n                      }\n                      className='rounded-circle playerpic mr-2'\n                    />\n                    <div className='ml-2 w-100'>\n                      <div>{player.name}</div>\n                      <div className='text-muted small'>Right Hand Batsmen</div>\n                      <div className='h-50 d-flex player-stats align-items-center text-secondary'>\n                        <div className='mr-3'>\n                          Matches: <span className='font-weight-bold'>{player.matches ? player.matches : '-'}</span>\n                        </div>\n                        <div className='mr-3'>\n                          Runs: <span className='font-weight-bold'>{player.runs ? player.runs : '-'}</span>\n                        </div>\n                        <div className='mr-3'>\n                          Avg: <span className='font-weight-bold'>{player.avg ? player.avg : '-'}</span>\n                        </div>\n                        <div>\n                          SRate: <span className='font-weight-bold'>{player.srate ? player.srate : '-'}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          : !editMode && (\n              <p className=' pt-5 pb-5 text-center'>\n                <button type='submit' class='btn btn-md btn-primary' onClick={() => redirectTo(`/player/add`)}>\n                  Create Player\n                </button>\n              </p>\n            )}\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/AddPlayer.js",["126","127","128"],"import React, { useState } from 'react';\nimport close from '../assets/close.png';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport plus from '../assets/plus2.svg';\nimport { getData, putData } from '../utils/storgeService';\n\nconst defaultStats = {\n  stats: {\n    matches: 0,\n    runs: 0,\n    innings: 0,\n    HS: 0,\n    avg: 0,\n    st_rate: 0,\n    thirties: 0,\n    fifties: 0,\n    fours: 0,\n    sixes: 0,\n    bowl_runs: 0,\n    bowl_avg: 0,\n    bowl_st_rate: 0,\n    econ: 0,\n    wkts: 0,\n    BF: 0,\n    overs: 0,\n  },\n};\n\nexport default function AddPlayer() {\n  const [playerForm, setPlayerForm] = useState({\n    name: '',\n    batting_style: 'RHB',\n    bowling_style: 'Fast Bowler',\n    profile_img: '',\n  });\n  const history = useHistory();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const handleForm = (value, key) => {\n    setPlayerForm({\n      ...playerForm,\n      [key]: value,\n    });\n  };\n\n  const createPlayer = () => {\n    let players = getData('players');\n    if (!players) players = [];\n    players.push({ ...playerForm, id: players.length + 1, ...defaultStats });\n    putData('players', players);\n    redirectTo('/players');\n  };\n\n  return (\n    <React.Fragment>\n      <div className='add-players-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Add Player</div>\n          <div onClick={() => redirectTo(`/players`)}>\n            <img src={close} width='30px' />\n          </div>\n        </div>\n\n        <div className='text-secondary'>\n          <div className='d-flex justify-content-center'>\n            <div style={{ position: 'relative' }}>\n              <img\n                src={'https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png'}\n                className='rounded-circle  mr-2'\n                style={{ width: '80px' }}\n              />\n              <img\n                src={plus}\n                style={{\n                  position: 'absolute',\n                  width: '25px',\n                  right: '10px',\n                  background: 'white',\n                  borderRadius: '50%',\n                  bottom: '0',\n                }}\n              />\n            </div>\n          </div>\n\n          <div class='form-group'>\n            <label for=''>Player Name</label>\n            <input\n              type='text'\n              class='form-control'\n              name='name'\n              id=''\n              aria-describedby='helpId'\n              placeholder='Enter player name '\n              value={playerForm.name}\n              onChange={(e) => handleForm(e.target.value, e.target.name)}\n            />\n            {/* <small id=\"helpId\" class=\"form-text text-muted\">Help text</small> */}\n          </div>\n\n          <div class='form-group'>\n            <label for=''>Batting style</label>\n            <select\n              class='form-control'\n              name='batting_style'\n              value={playerForm.batting_style}\n              onChange={(e) => handleForm(e.target.value, e.target.name)}\n            >\n              <option value='RHB'>RHB</option>\n              <option value='LHB'>LHB</option>\n            </select>\n          </div>\n\n          <div class='form-group'>\n            <label for=''>Bowling style</label>\n            <select\n              class='form-control'\n              name='bowling_style'\n              value={playerForm.bowling_style}\n              onChange={(e) => handleForm(e.target.value, e.target.name)}\n            >\n              <option value='fast'>Fast Bowler</option>\n              <option value='spin'>Spin Bowler</option>\n            </select>\n          </div>\n          <br />\n          <div class='form-group'>\n            <button type='submit' class='btn btn-md btn-primary w-100' onClick={() => createPlayer()}>\n              Create\n            </button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/AddMatch.js",["129","130"],"import React, { useState, useEffect } from 'react';\nimport close from '../assets/close.png';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport { getData, putData } from '../utils/storgeService';\nimport { colourOptions } from '../Components/SingleSelect/data';\nimport SingleSelect from '../Components/SingleSelect/SingleSelect';\nimport moment from 'moment';\n\nexport default function AddMatch() {\n  const [matchForm, setMatchForm] = useState({\n    team_1: '',\n    team_2: '',\n    toss_won_by: '',\n    batting_first: '',\n    overs: 8,\n  });\n\n  const [teamsOptions, setTeamsOptions] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    getTeamData();\n  }, []);\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const handleForm = (value, key) => {\n    setMatchForm({\n      ...matchForm,\n      [key]: value,\n    });\n  };\n\n  const getTeamData = () => {\n    let teamsArr = getData('teams');\n    let teamsData = teamsArr ? teamsArr : [];\n    let teamsOptions = teamsData.map((t) => {\n      return {\n        label: t.name,\n        value: t.id,\n        color: '#000000',\n      };\n    });\n\n    setTeamsOptions([...teamsOptions]);\n    setTeams([...teamsData]);\n  };\n\n\n  const getTeamById = (teamId) => {\n    let team = teams.find((t) => t.id === teamId);\n    return team;\n  };\n\n  const createMatch = () => {\n    let matches = getData('matches');\n    if (!matches) matches = [];\n    const date = moment();\n\n    let match = {\n      [`team_${matchForm.team_1.value}`]: getTeamById(matchForm.team_1.value),\n      [`team_${matchForm.team_2.value}`]: getTeamById(matchForm.team_2.value),\n      toss_won_by: matchForm.toss_won_by.value,\n      batting_first: matchForm.batting_first.value,\n      overs: matchForm.overs,\n      date: date.format('DD/MM/YYYY'),\n      teams:[matchForm.team_1.value,matchForm.team_2.value],\n      scorecard: {\n        innings_1: {\n          runs: 0,\n          wkts: 0,\n          current_over: 0,\n          current_ball: 0,\n          balls: [],\n          target: '',\n          striker: '',\n          non_striker: '',\n          bowler_1: '',\n          bowler_2: '',\n          end: false,\n          batting: {},\n        },\n        innings_2: {\n          runs: 0,\n          wkts: 0,\n          current_over: 0,\n          current_ball: 0,\n          balls: [],\n          target: '',\n          striker: '',\n          non_striker: '',\n          bowler_1: '',\n          bowler_2: '',\n          end: false,\n        },\n      },\n    };\n    matches.push({ ...match, id: matches.length + 1 });\n    putData('matches', matches);\n    redirectTo('/matches');\n  };\n\n  const team2_validation = matchForm.team_1 === '';\n  const toss_won_by_validation = matchForm.team_1 === '' || matchForm.team_2 === '';\n  const batting_first_validation = matchForm.toss_won_by === '';\n\n  return (\n    <React.Fragment>\n      <div className='add-players-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Add Match</div>\n          <div onClick={() => redirectTo(`/matches`)}>\n            <img src={close} width='30px' />\n          </div>\n        </div>\n\n        <div className='text-secondary'>\n          <div class='form-group'>\n            <label for=''>Team 1</label>\n            <SingleSelect\n              name={'team_1'}\n              placeholder=''\n              options={teamsOptions}\n              value={matchForm.team_1}\n              isSearchable={true}\n              onChange={(value) => {\n                handleForm(value, 'team_1');\n              }}\n            />\n          </div>\n          <div class='form-group'>\n            <label for=''>Team 2</label>\n            <SingleSelect\n              name={'team_2'}\n              placeholder=''\n              options={teamsOptions.filter((t) => t.value !== matchForm.team_1.value)}\n              value={matchForm.team_2}\n              isDisabled={team2_validation}\n              isSearchable={true}\n              onChange={(value) => {\n                handleForm(value, 'team_2');\n              }}\n            />\n          </div>\n          <div class='form-group'>\n            <label for=''>Toss Won By</label>\n            <SingleSelect\n              name={'toss_won_by'}\n              placeholder=''\n              options={[\n                {\n                  label: matchForm.team_1.label,\n                  value: matchForm.team_1.value,\n                  color: '#000000',\n                },\n                {\n                  label: matchForm.team_2.label,\n                  value: matchForm.team_2.value,\n                  color: '#000000',\n                },\n              ]}\n              value={matchForm.toss_won_by}\n              isDisabled={toss_won_by_validation}\n              isSearchable={true}\n              onChange={(value) => {\n                handleForm(value, 'toss_won_by');\n              }}\n            />\n          </div>\n          <div class='form-group'>\n            <label for=''>Batting First</label>\n            <SingleSelect\n              name={'batting_first'}\n              placeholder=''\n              options={[\n                {\n                  label: matchForm.team_1.label,\n                  value: matchForm.team_1.value,\n                  color: '#000000',\n                },\n                {\n                  label: matchForm.team_2.label,\n                  value: matchForm.team_2.value,\n                  color: '#000000',\n                },\n              ]}\n              value={matchForm.batting_first}\n              isDisabled={batting_first_validation}\n              isSearchable={true}\n              onChange={(value) => {\n                handleForm(value, 'batting_first');\n              }}\n            />\n          </div>\n          <div class='form-group'>\n            <label for=''>Innings Overs</label>\n            <input\n              type='number'\n              class='form-control'\n              name='overs'\n              id=''\n              aria-describedby='helpId'\n              placeholder='Enter Overs'\n              value={matchForm.overs}\n              onChange={(e) => {\n                handleForm(e.target.value, 'overs');\n              }}\n            />\n          </div>\n\n          <br />\n          <div class='form-group'>\n            <button type='submit' class='btn btn-md btn-primary w-100' onClick={() => createMatch()}>\n              Create Match\n            </button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/pages/AddTeam.js",["131","132","133"],"import React, { useState } from 'react';\nimport close from '../assets/close.png';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../Components/Footer';\nimport plus from '../assets/plus2.svg';\nimport { getData, putData } from '../utils/storgeService';\n\nexport default function AddTeam() {\n  const [teamForm, setTeamForm] = useState({\n    name: '',\n    image: '',\n  });\n  const history = useHistory();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  const handleForm = (value, key) => {\n    setTeamForm({\n      ...teamForm,\n      [key]: value,\n    });\n  };\n\n  const createTeam = () => {\n    let teams = getData('teams');\n    if (!teams) teams = [];\n    teams.push({ ...teamForm, id: teams.length + 1, players:[] });\n    putData('teams', teams);\n    redirectTo('/teams');\n  };\n\n  return (\n    <React.Fragment>\n      <div className='add-players-wrapper full-height'>\n        <div className='p-2 h5 text-secondary border-bottom d-flex align-items-center justify-content-between'>\n          <div>Add Team</div>\n          <div onClick={() => redirectTo(`/teams`)}>\n            <img src={close} width='30px' />\n          </div>\n        </div>\n\n        <div className='text-secondary'>\n          <div className='d-flex justify-content-center'>\n            <div style={{ position: 'relative' }}>\n              <img\n                src={'https://www.searchpng.com/wp-content/uploads/2019/02/Men-Profile-Image-715x657.png'}\n                className='rounded-circle  mr-2'\n                style={{ width: '80px' }}\n              />\n              <img\n                src={plus}\n                style={{\n                  position: 'absolute',\n                  width: '25px',\n                  right: '10px',\n                  background: 'white',\n                  borderRadius: '50%',\n                  bottom: '0',\n                }}\n              />\n            </div>\n          </div>\n\n          <div class='form-group'>\n            <label for=''>Team Name</label>\n            <input\n              type='text'\n              class='form-control'\n              name='name'\n              id=''\n              aria-describedby='helpId'\n              placeholder='Enter team name '\n              value={teamForm.name}\n              onChange={(e) => handleForm(e.target.value, e.target.name)}\n            />\n            {/* <small id=\"helpId\" class=\"form-text text-muted\">Help text</small> */}\n          </div>\n\n          <br />\n          <div class='form-group'>\n            <button type='submit' class='btn btn-md btn-primary w-100' onClick={() => createTeam()}>\n              Create Team\n            </button>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","/Users/saravanan/scorer/src/Components/Header/index.js",["134"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ball from '../../assets/ball.svg';\n\nexport default function Header() {\n  const history = useHistory();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  return (\n    <div className='header p-2'>\n      <div className='title d-flex justify-content-between align-items-center' onClick={() => redirectTo('/')}>\n        <img src={ball} style={{ width: '18px' }} className='mr-2' />\n        <div className='text-secondary'>\n          SCORE<span className='text-danger'>BOARD</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/saravanan/scorer/src/Components/Common/Loader/index.js",["135"],"import React from 'react';\n\nexport default function Loader({ status }) {\n  return (\n    status && (\n      <div className='loader'>\n        <img src={'https://cdn.dribbble.com/users/2441534/screenshots/5695972/loader.gif'} />\n      </div>\n    )\n  );\n}\n","/Users/saravanan/scorer/src/utils/storgeService.js",[],"/Users/saravanan/scorer/src/Components/SingleSelect/data.js",[],"/Users/saravanan/scorer/src/Components/SingleSelect/SingleSelect.js",[],"/Users/saravanan/scorer/src/Components/Footer/index.js",["136","137","138"],"import React from 'react';\nimport teams from '../../assets/group.svg';\nimport matches from '../../assets/cricket.svg';\nimport players from '../../assets/player.svg';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nexport default function Footer() {\n  const history = useHistory();\n  const match = useRouteMatch();\n\n  const redirectTo = (route) => {\n    history.push(route);\n  };\n\n  return (\n    <div className='footer'>\n      <div className='menubar d-flex align-items-center text-center'>\n        <div\n          className={`menuitem p-2 ${match && match.path === '/teams' ? 'selected' : ''}`}\n          onClick={() => redirectTo('/teams')}\n        >\n          <div>\n            <img src={teams} style={{ width: '50px' }} />\n          </div>\n          <div>Teams</div>\n        </div>\n        <div\n          className={`menuitem p-2 ${match && match.path === '/matches' ? 'selected' : ''}`}\n          onClick={() => redirectTo('/matches')}\n        >\n          <div>\n            <img src={matches} style={{ width: '50px' }} />\n          </div>\n          <div>Matches</div>\n        </div>\n        <div\n          className={`menuitem p-2 ${match && match.path === '/players' ? 'selected' : ''}`}\n          onClick={() => redirectTo('/players')}\n        >\n          <div>\n            <img src={players} style={{ width: '50px' }} />\n          </div>\n          <div>Players</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/saravanan/scorer/src/Components/Modal/index.js",["139"],"import React from 'react';\nimport { createPortal } from 'react-dom';\nimport './modal.scss';\nimport close from '../../assets/close.png';\n\n// We get hold of the div with the id modal that we have created in index.html\nconst modalRoot = document.getElementById('modal');\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    // We create an element div for this modal\n    this.element = document.createElement('div');\n  }\n  // We append the created div to the div#modal\n  componentDidMount() {\n    modalRoot.appendChild(this.element);\n  }\n  /**\n   * We remove the created div when this Modal Component is unmounted\n   * Used to clean up the memory to avoid memory leak\n   */\n  componentWillUnmount() {\n    modalRoot.removeChild(this.element);\n  }\n  render() {\n    const content = this.props.isOpen ? (\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: '100%',\n          width: '100%',\n          padding: '2rem',\n          paddingTop: '2rem',\n          backgroundColor: 'rgba(0,0,0,0.6)',\n        }}\n        className='custom-modal'\n      >\n        <div\n          style={{\n            backgroundColor: 'white',\n            padding: '1rem',\n          }}\n        >\n          <div className='d-flex align-items-center justify-content-between'>\n            <div\n              style={{\n                padding: '5px',\n                textAlign: 'center',\n              }}\n            >\n              {this.props.title || 'title'}\n            </div>\n            <div>\n              <img onClick={this.props.onClose} src={close} width='30px' />\n            </div>\n          </div>\n          <hr></hr>\n          <div className='custom-modal-content'>{this.props.children}</div>\n          {this.props.footer && (\n            <React.Fragment>\n              <hr></hr>\n              <div>{this.props.footer}</div>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    ) : '';\n\n    return createPortal(content, this.element);\n  }\n}\nexport default Modal;\n",["140","141"],"/Users/saravanan/scorer/src/Components/BallEle/index.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":28,"column":15,"nodeType":"148","endLine":28,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":42,"column":17,"nodeType":"148","endLine":45,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":25,"column":6,"nodeType":"151","endLine":25,"endColumn":8,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":29,"column":6,"nodeType":"151","endLine":29,"endColumn":24,"suggestions":"154"},{"ruleId":"146","severity":1,"message":"147","line":55,"column":11,"nodeType":"148","endLine":58,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":115,"column":23,"nodeType":"148","endLine":121,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":28,"column":15,"nodeType":"148","endLine":28,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":42,"column":17,"nodeType":"148","endLine":45,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":5,"column":37,"nodeType":"157","messageId":"158","endLine":5,"endColumn":50},{"ruleId":"149","severity":1,"message":"159","line":46,"column":6,"nodeType":"151","endLine":46,"endColumn":8,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"161","line":50,"column":6,"nodeType":"151","endLine":50,"endColumn":24,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"163","line":98,"column":9,"nodeType":"157","messageId":"158","endLine":98,"endColumn":19},{"ruleId":"155","severity":1,"message":"164","line":106,"column":9,"nodeType":"157","messageId":"158","endLine":106,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":366,"column":15,"nodeType":"148","endLine":366,"endColumn":113},{"ruleId":"146","severity":1,"message":"147","line":380,"column":15,"nodeType":"148","endLine":380,"endColumn":77},{"ruleId":"149","severity":1,"message":"165","line":17,"column":6,"nodeType":"151","endLine":17,"endColumn":8,"suggestions":"166"},{"ruleId":"146","severity":1,"message":"147","line":23,"column":11,"nodeType":"148","endLine":23,"endColumn":171},{"ruleId":"146","severity":1,"message":"147","line":28,"column":15,"nodeType":"148","endLine":28,"endColumn":46},{"ruleId":"146","severity":1,"message":"147","line":43,"column":21,"nodeType":"148","endLine":49,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":64,"column":13,"nodeType":"148","endLine":64,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":71,"column":15,"nodeType":"148","endLine":75,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":76,"column":15,"nodeType":"148","endLine":86,"endColumn":17},{"ruleId":"155","severity":1,"message":"167","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":117,"column":13,"nodeType":"148","endLine":117,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":40,"column":13,"nodeType":"148","endLine":40,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":47,"column":15,"nodeType":"148","endLine":51,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":52,"column":15,"nodeType":"148","endLine":62,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":15,"column":9,"nodeType":"148","endLine":15,"endColumn":70},{"ruleId":"146","severity":1,"message":"147","line":7,"column":9,"nodeType":"148","endLine":7,"endColumn":94},{"ruleId":"146","severity":1,"message":"147","line":23,"column":13,"nodeType":"148","endLine":23,"endColumn":58},{"ruleId":"146","severity":1,"message":"147","line":32,"column":13,"nodeType":"148","endLine":32,"endColumn":60},{"ruleId":"146","severity":1,"message":"147","line":41,"column":13,"nodeType":"148","endLine":41,"endColumn":60},{"ruleId":"146","severity":1,"message":"147","line":56,"column":15,"nodeType":"148","endLine":56,"endColumn":76},{"ruleId":"142","replacedBy":"168"},{"ruleId":"144","replacedBy":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'teamId'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'teamData'. Either include it or remove the dependency array.",["173"],"no-unused-vars","'getPlayerById' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'matchData' and 'matchId'. Either include them or remove the dependency array. You can also do a functional update 'setMatchData(m => ...)' if you only need 'matchData' in the 'setMatchData' call.",["174"],"React Hook useEffect has a missing dependency: 'matchData.data'. Either include it or remove the dependency array.",["175"],"'redirectTo' is assigned a value but never used.","'addRunEvent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'playerId'. Either include it or remove the dependency array.",["176"],"'colourOptions' is defined but never used.",["170"],["171"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [teamId]",{"range":"187","text":"188"},"Update the dependencies array to be: [teamData, teamData.players]",{"range":"189","text":"190"},"Update the dependencies array to be: [matchData, matchId]",{"range":"191","text":"192"},"Update the dependencies array to be: [matchData.data, matchData.update]",{"range":"193","text":"194"},"Update the dependencies array to be: [playerId]",{"range":"195","text":"196"},[866,868],"[teamId]",[940,958],"[teamData, teamData.players]",[1244,1246],"[matchData, matchId]",[1355,1373],"[matchData.data, matchData.update]",[485,487],"[playerId]"]